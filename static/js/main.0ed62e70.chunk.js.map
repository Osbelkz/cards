{"version":3,"sources":["n2-features/f1-auth/a1-login/Login.module.scss","n2-features/f3-learn/l1-learn/Learn.module.scss","n2-features/f1-auth/a3-restore/Restore.module.scss","n2-features/f1-auth/a4-new-password/NewPassword.module.scss","n2-features/f1-auth/a2-register/Register.module.scss","n1-main/m1-ui/common/ModalWindows/Modal.module.scss","n2-features/f1-auth/a5-profile/Profile.module.css","n1-main/m1-ui/common/Input/Input.module.css","n1-main/m1-ui/common/Slider/Slider.module.scss","n2-features/f2-cards/c1-packs/Packs.module.scss","n1-main/m1-ui/common/Table/Table.module.scss","n2-features/f2-cards/c2-cards/Cards.module.scss","n1-main/m1-ui/common/Paginator/Paginator.module.scss","n1-main/m1-ui/common/ColumnSorting/ColumnSorting.module.scss","n1-main/m1-ui/common/Page404/PageNotFound.module.css","n1-main/m1-ui/common/NavItem/NavItem.module.css","n1-main/m1-ui/common/Button/Button.module.css","n1-main/m1-ui/common/Preloader/Preloader.module.scss","n1-main/m1-ui/common/Table/EditableTableCell/EditableTableCell.module.scss","n1-main/m1-ui/common/Table/TableButton/TableButton.module.scss","n1-main/m1-ui/common/Search/Search.module.scss","n1-main/m1-ui/Header/Header.module.css","n1-main/m1-ui/Header/Nav/Nav.module.css","n1-main/m1-ui/Main/Main.module.css","n1-main/m1-ui/common/ModalWindows/QuestionModal/QuestionModal.module.scss","n1-main/m1-ui/common/ModalWindows/OneInputModal/OneInputModal.module.scss","n1-main/m1-ui/common/Table/RemoveBTN/Trash-Outline.svg","n1-main/m1-ui/common/Table/RemoveBTN/RemoveBTN.module.scss","n1-main/m1-ui/common/Table/OpenBTN/Folder-Outline.svg","n1-main/m1-ui/common/Table/OpenBTN/OpenBTN.module.scss","n1-main/m1-ui/common/Table/TrainBTN/Fitness_Fill.svg","n1-main/m1-ui/common/Table/TrainBTN/TrainBTN.module.scss","n1-main/m1-ui/common/ModalWindows/ThreeInputModal/ThreeInputModal.module.scss","n1-main/m1-ui/common/Table/EditBTN/Pencil-Outline.svg","n1-main/m1-ui/common/Table/EditBTN/EditBTN.module.scss","n1-main/m2-bll/reducers/app-reducer.ts","n1-main/m1-ui/common/NavItem/NavItem.tsx","n1-main/m1-ui/Header/Nav/Nav.tsx","n1-main/m1-ui/Header/Header.tsx","n1-main/m1-ui/common/Button/Button.tsx","n2-features/f1-auth/a5-profile/Profile.tsx","n1-main/m3-dal/auth-api.ts","n1-main/m2-bll/reducers/login-reducer.ts","n1-main/m2-bll/reducers/profileP-reducer.ts","n1-main/m2-bll/reducers/register-reducer.ts","n2-features/f1-auth/a5-profile/ProfileContainer.tsx","n1-main/m1-ui/common/Input/Input.tsx","n2-features/f1-auth/a1-login/Login.tsx","n2-features/f1-auth/a1-login/LoginContainer.tsx","n2-features/f1-auth/a2-register/Register.tsx","n2-features/f1-auth/a2-register/RegisterContainer.tsx","n2-features/f1-auth/a3-restore/Restore.tsx","n1-main/m2-bll/reducers/restorePassword-reducer.ts","n2-features/f1-auth/a3-restore/RestoreContainer.tsx","n2-features/f1-auth/a4-new-password/NewPassword.tsx","n1-main/m2-bll/reducers/newPassword-reducer.ts","n2-features/f1-auth/a4-new-password/NewPasswordContainer.tsx","n1-main/m1-ui/common/Preloader/Preloader.tsx","n1-main/m1-ui/common/AuthRedirect/AuthRedirect.tsx","n1-main/m2-bll/reducers/packs-reducer.ts","n1-main/m1-ui/common/Table/Table.tsx","n1-main/m1-ui/common/Table/TableButton/TableButton.tsx","n1-main/m1-ui/common/Table/EditableTableCell/EditableTableCell.tsx","n1-main/m1-ui/common/Slider/Slider.tsx","n1-main/m1-ui/common/Search/Search.tsx","n1-main/m1-ui/common/Paginator/Paginator.tsx","n1-main/m1-ui/common/ColumnSorting/ColumnSorting.tsx","n1-main/m1-ui/common/ModalWindows/Modal.tsx","n1-main/m1-ui/common/ModalWindows/QuestionModal/QuestionModal.tsx","n1-main/m1-ui/common/ModalWindows/QuestionModal/QuestionModalContainer.tsx","n1-main/m1-ui/common/ModalWindows/OneInputModal/OneInputModal.tsx","n1-main/m1-ui/common/Table/RemoveBTN/RemoveBTN.tsx","n1-main/m1-ui/common/Table/OpenBTN/OpenBTN.tsx","n1-main/m1-ui/common/Table/TrainBTN/TrainBTN.tsx","n2-features/f2-cards/c1-packs/Packs.tsx","n1-main/m3-dal/packs-api.ts","n1-main/m2-bll/reducers/cards-reducer.ts","n1-main/m3-dal/cards-api.ts","n2-features/f2-cards/c1-packs/PacksContainer.tsx","n1-main/m1-ui/common/ModalWindows/ThreeInputModal/ThreeInputModal.tsx","n1-main/m1-ui/common/Table/EditBTN/EditBTN.tsx","n2-features/f2-cards/c2-cards/Cards.tsx","n2-features/f2-cards/c2-cards/CardsContainer.tsx","n2-features/f3-learn/l1-learn/Learn.tsx","n2-features/f3-learn/l1-learn/LearnContainer.tsx","n1-main/m1-ui/common/Page404/PageNotFound.tsx","n1-main/m1-ui/Routes/Routes.tsx","n1-main/m1-ui/Main/Main.tsx","n1-main/m1-ui/App.tsx","serviceWorker.ts","n1-main/m2-bll/store.ts","index.tsx"],"names":["module","exports","ACTION_TYPE","NavItem","path","title","to","className","classes","navItem","activeClassName","active","Nav","routes","Header","header","Button","React","memo","btnType","btnName","rest","buttonClasses","button","userData","logout","profile","profile__container","profile__title","profile__info","_id","name","email","created","publicCardPacksCount","profile__buttons","onClick","instance","axios","create","baseURL","withCredentials","authAPI","post","data","delete","value","from","message","initialState","isLoading","isLoggedSuccess","error","setValueIsLoading","type","setValueIsLoggedSuccess","setErrorText","initApp","setAppErrorAC","SET_APP_ERROR","payload","setInitAppAC","SET_INIT_APP","setProfileUserDataAC","SET_USER","ProfileContainer","dispatch","useDispatch","useSelector","state","logoutHandler","useCallback","a","e","response","Input","label","errorCondition","errorText","input","input__label","input__elem","input__error","inputs__error_text","Login","handleOnSubmit","formik","useFormik","initialValues","password","rememberMe","validate","values","errors","test","length","onSubmit","login","login__container","login__form","handleSubmit","login__title","login__inputs","placeholder","touched","getFieldProps","login__checkbox","id","checkbox","checked","htmlFor","login__buttons","disabled","isValid","resetForm","infoTextRed","loading","LoginContainer","then","res","catch","setTimeout","logInUserInAppTC","Register","status","password2","register","register__container","register__form","register__title","register__inputs","register__buttons","register__error","register__loading","setErrorAC","SET_ERROR","setStatusAC","SET_STATUS","RegisterContainer","onSubmitHandler","Restore","isSentSuccess","textAfterRequest","restore","restore__container","restore__form","restore__title","restore__inputs","restore__buttons","infoTextGreen","setValueIsSentSuccess","setRestoreTextAfterRequest","RestoreContainer","restorePassword","info","restoreTC","NewPassword","isOk","isSetNewPassword","token","useParams","password1","newPassword","newPassword__container","newPassword__form","newPassword__title","newPassword__inputs","newPassword__buttons","setValueIsSetNewPassword","setValueIsOk","text","NewPasswordContainer","resetPasswordToken","setNewPasswordTC","Preloader","container","ldsFacebook","ACTION_TYPES","AuthRedirect","props","app","useEffect","getState","children","Table","model","pageStatus","table","table__loading","table__row_header","map","m","index","dataItem","dataIndex","table__row_data","key","modelIndex","render","TableButton","EditableTableCell","changeText","useState","edit","setEdit","editableText","setEditableText","enableEditMode","editable_cell","editable_cell__input","onChange","target","autoFocus","onDoubleClick","Slider","leftMin","min","maxValue","leftMax","max","doubleRange","rangeNum","style","left","minValue","step","stepValue","range","currentTarget","setMin","setMax","Search","setSearchParams","searchValue","setSearchValue","inputOnChangeHandler","onSearchClick","uniSearch","slider","Paginator","currentPage","pageCount","changePageCount","changePage","itemsName","itemsTotalCount","pageNumber","setPageNumber","pageAmount","Math","ceil","pageSetHandler","paginator","leftBlock","rightBlock","onBlur","onKeyPress","ColumnSorting","up","down","Modal","setActive","modal","modalContent","modalContentActive","stopPropagation","QuestionModal","setAnswerY","setAnswerN","questionModal","right","QuestionModalContainer","activate","setActivate","OneInputModal","position","width","height","padding","top","inputModal","marginLeft","RemoveBTN","btn_remove","src","removeSVG","alt","OpenBTN","btn_open","openSVG","TrainBTN","btn_train","trainSVG","Packs","packs","userId","page","setPacksSortColumn","cardPacksTotalCount","createPack","deletePack","updatePack","choosePack","packName","searchParams","startLearn","sortCardsCount","sort","showDeletePackModal","setShowDeletePackModal","showCreatePackModal","setShowCreatePackModal","testModel","useMemo","i","paddingLeft","d","user_id","moment","format","display","alignItems","cardsCount","user_name","paddingRight","textAlign","minHeight","packs__container","packs__title","packs__body","packsApi","params","get","cardsPack","put","undefined","sortPacks","changePageAC","CHANGE_PAGE","setPacksAC","SET_PACKS","setPageStatusAC","SET_IS_LOADING","getPacksTC","selectedPage","cardPacks","minCardsCount","maxCardsCount","alert","cardsApi","card","cardsPack_id","cardsOwner","cards","cardsTotalCount","minGrade","maxGrade","cardIsLoading","cardQuestion","cardAnswer","sortCards","changeCardsPageAC","setCardsPageStatus","setPackAC","SET_PACK_ID","setCardIsLoadingAC","SET_CARD_IS_LOADING","getCardsTC","pageCountLearn","SET_CARDS","updateGradeTC","PacksContainer","history","useHistory","deletePackHandler","deletePackTC","createPackHandler","createPackTC","updatePackHandler","updatePackTC","changePageHandler","changePageCountHandler","CHANGE_PAGE_COUNT","changePageCountAC","setSearchParamsHandler","searchName","SET_SEARCH_PARAMS","setSearchParamsAC","setPacksSortColumnHandler","SET_SORT_PACKS","setPacksSortColumnAC","choosePackHandler","packId","push","startLearnHandler","ThreeInputModal","firstInputValue","secondInputValue","thirdInputValue","console","log","question","answer","comment","EditBTN","btn_edit","editSVG","Cards","owner","setSortColumn","createCard","deleteCard","updateCard","showCreateModal","setShowCreateModal","showDeleteModal","setShowDeleteModal","showEditModal","setShowEditModal","sortGrade","grade","toFixed","comments","CardsContainer","deleteCardHandler","cardId","deleteCardTC","createCardHandler","updateCardHandler","changeCardsPageCountAC","setCardsSearchParamsAC","setSortColumnHandler","SET_SORT_COLUMN","setCardsSortColumnParamsAC","grades","Learn","onNext","gradeCard","isChecked","flipCard","learn","learn__container","transform","card__inner","card__front","card__text","card__back","card__back_bottom","g","card__next_btn","getCard","sum","reduce","acc","rand","random","newSum","LearnContainer","setCard","first","setFirst","setIsChecked","flipCardHandler","gradeCardHandler","card_id","PageNotFound","wrap","subtitle","Routes","exact","Main","main","App","Boolean","window","location","hostname","match","rootReducer","combineReducers","action","SET_TOTAL_COUNT","SET_SEARCH_NAME","store","configureStore","reducer","middleware","getDefaultMiddleware","prepend","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0ed62e70.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__wZFJO\",\"login__container\":\"Login_login__container__2RiFi\",\"login__form\":\"Login_login__form__1oQF8\",\"login__inputs\":\"Login_login__inputs__ltC67\",\"login__checkbox\":\"Login_login__checkbox__3DmST\",\"login__buttons\":\"Login_login__buttons__vdiUC\",\"loading\":\"Login_loading__31U9z\",\"checkbox\":\"Login_checkbox__DfSwd\",\"infoTextRed\":\"Login_infoTextRed__1QnOh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"learn\":\"Learn_learn__2xlPv\",\"learn__container\":\"Learn_learn__container__ftJjQ\",\"learn__title\":\"Learn_learn__title__3_F4Y\",\"card\":\"Learn_card__1Kk-g\",\"card__inner\":\"Learn_card__inner__rzEPc\",\"card__front\":\"Learn_card__front__2CNrv\",\"card__back\":\"Learn_card__back__1zCq5\",\"card__next_btn\":\"Learn_card__next_btn__3Px4C\",\"card__text\":\"Learn_card__text__w6gTI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"restore\":\"Restore_restore__Qt9OF\",\"restore__container\":\"Restore_restore__container__DbDYU\",\"restore__form\":\"Restore_restore__form__1RfxB\",\"restore__inputs\":\"Restore_restore__inputs__AIHLA\",\"restore__buttons\":\"Restore_restore__buttons__3URYh\",\"infoTextGreen\":\"Restore_infoTextGreen__3SE_5\",\"infoTextRed\":\"Restore_infoTextRed__1H9hi\",\"loading\":\"Restore_loading__xj32h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPassword\":\"NewPassword_newPassword__3DqU1\",\"newPassword__container\":\"NewPassword_newPassword__container__m-yCZ\",\"newPassword__form\":\"NewPassword_newPassword__form__2OlrG\",\"newPassword__inputs\":\"NewPassword_newPassword__inputs__34B_D\",\"newPassword__buttons\":\"NewPassword_newPassword__buttons__11RvK\",\"infoTextRed\":\"NewPassword_infoTextRed__3ZAHA\",\"infoTextGreen\":\"NewPassword_infoTextGreen__1mFv-\",\"loading\":\"NewPassword_loading__3hwTp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"register\":\"Register_register__2OoZ1\",\"register__container\":\"Register_register__container__20Y9Z\",\"register__form\":\"Register_register__form__tCvBa\",\"register__inputs\":\"Register_register__inputs__WISn5\",\"register__buttons\":\"Register_register__buttons__1xdWp\",\"register__error\":\"Register_register__error__1lW52\",\"register__loading\":\"Register_register__loading__2Href\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__1HKqi\",\"modalContent\":\"Modal_modalContent__3u9Ne\",\"modalContentActive\":\"Modal_modalContentActive__3sorC\",\"active\":\"Modal_active__EvCwF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1-5kW\",\"profile__container\":\"Profile_profile__container__32E_8\",\"profile__title\":\"Profile_profile__title__184h-\",\"profile__info\":\"Profile_profile__info__205Db\",\"profile__buttons\":\"Profile_profile__buttons__ZYrOS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__2b9yi\",\"input__label\":\"Input_input__label__1lDak\",\"input__elem\":\"Input_input__elem__2Zzrh\",\"input__error\":\"Input_input__error__2PMc0\",\"inputs__error_text\":\"Input_inputs__error_text__3FrbP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"doubleRange\":\"Slider_doubleRange__FWpuu\",\"rangeNum\":\"Slider_rangeNum__3-whB\",\"range\":\"Slider_range__2pAqR\",\"range2\":\"Slider_range2__1YSEn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packs\":\"Packs_packs__4Z6yr\",\"packs__container\":\"Packs_packs__container__10omq\",\"packs__title\":\"Packs_packs__title__2-FHM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__2tyvk\",\"table__loading\":\"Table_table__loading__qsfzN\",\"table__row_header\":\"Table_table__row_header__3I7da\",\"table__row_data\":\"Table_table__row_data__3i-oQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packs\":\"Cards_packs__167TP\",\"packs__container\":\"Cards_packs__container__1nr1B\",\"packs__title\":\"Cards_packs__title__1LFQ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2-To7\",\"leftBlock\":\"Paginator_leftBlock__2JUGx\",\"rightBlock\":\"Paginator_rightBlock__2ATkU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ColumnSorting_container__zEKkb\",\"up\":\"ColumnSorting_up__2wXZ2\",\"down\":\"ColumnSorting_down__204t9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"PageNotFound_wrap__20qaz\",\"title\":\"PageNotFound_title__1japc\",\"subtitle\":\"PageNotFound_subtitle__1u3wU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navItem\":\"NavItem_navItem__3DieS\",\"active\":\"NavItem_active___rzAL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__ir3Eb\",\"green\":\"Button_green__3fh93\",\"red\":\"Button_red__1bozl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Preloader_container__2_C5R\",\"ldsFacebook\":\"Preloader_ldsFacebook__RYldd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editable_cell\":\"EditableTableCell_editable_cell__3n6DE\",\"editable_cell__input\":\"EditableTableCell_editable_cell__input__1S_rh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"TableButton_button__imyMp\",\"green\":\"TableButton_green__3URIo\",\"red\":\"TableButton_red__2SmU_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"uniSearch\":\"Search_uniSearch__2Iavf\",\"slider\":\"Search_slider__1Od3x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3zo7u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"routes\":\"Nav_routes__NLzDx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__2rISc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"questionModal\":\"QuestionModal_questionModal__cV3J1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputModal\":\"OneInputModal_inputModal__30rtM\"};","module.exports = __webpack_public_path__ + \"static/media/Trash-Outline.d76ce237.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn_remove\":\"RemoveBTN_btn_remove__3e_pz\"};","module.exports = __webpack_public_path__ + \"static/media/Folder-Outline.bbf08363.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn_open\":\"OpenBTN_btn_open__1a7yh\"};","module.exports = __webpack_public_path__ + \"static/media/Fitness_Fill.5812c2c9.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn_train\":\"TrainBTN_btn_train__2_vlt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputModal\":\"ThreeInputModal_inputModal__39AW4\"};","module.exports = __webpack_public_path__ + \"static/media/Pencil-Outline.042251b4.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn_edit\":\"EditBTN_btn_edit__33NZf\"};","import {Dispatch} from \"redux\";\r\nimport { authAPI } from \"../../m3-dal/auth-api\";\r\nimport {RootStateType} from \"../store\";\r\nimport {setErrorText, setValueIsLoggedSuccess } from \"./login-reducer\";\r\nimport {setProfileUserDataAC} from \"./profileP-reducer\";\r\n\r\nenum ACTION_TYPE {\r\n    SET_APP_ERROR = \"App/SET_APP_ERROR\",\r\n    SET_INIT_APP = \"App/SET_INIT_APP\"\r\n}\r\n\r\nconst initialState = {\r\n    error: \"\",\r\n    initApp: \"idle\" as StatusType\r\n}\r\n\r\nexport const appReducer = (state: AppStateType = initialState, action: ActionsType): AppStateType => {\r\n    switch (action.type) {\r\n        case ACTION_TYPE.SET_APP_ERROR:\r\n        case ACTION_TYPE.SET_INIT_APP:\r\n            return {\r\n                ...state, ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nexport const setAppErrorAC = (error: string) => {\r\n    return {type: ACTION_TYPE.SET_APP_ERROR, payload: {error}}\r\n}\r\nexport const setInitAppAC = (initApp: StatusType) => {\r\n    return {type: ACTION_TYPE.SET_INIT_APP, payload: {initApp}}\r\n}\r\n\r\nexport type ActionsType = ReturnType<typeof setAppErrorAC> | ReturnType<typeof setInitAppAC>\r\n\r\n// thunk\r\n\r\nexport const authMeTC = () => async (dispatch: Dispatch, getState: () => RootStateType) => {\r\n    dispatch(setInitAppAC(\"loading\"))\r\n    dispatch(setAppErrorAC(\"\"))\r\n    try {\r\n        let response = await authAPI.me()\r\n        dispatch(setProfileUserDataAC(response.data))\r\n        dispatch(setValueIsLoggedSuccess(true))\r\n        dispatch(setInitAppAC(\"succeeded\"))\r\n    } catch (e) {\r\n        // dispatch(setAppErrorAC(e.response ? e.response.data.error : \"unknown error\"))\r\n        dispatch(setInitAppAC(\"failed\"))\r\n        dispatch(setErrorText(e.response ? e.response.data.error : \"unknown error\"))\r\n    }\r\n}\r\n\r\nexport type AppStateType = typeof initialState\r\nexport type StatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport classes from \"./NavItem.module.css\";\r\n\r\ntype PropsType = {\r\n    path: string\r\n    title: string\r\n}\r\n\r\nconst NavItem: React.FC<PropsType> = ({path, title}) => {\r\n\r\n    return (\r\n            <NavLink to={path} className={classes.navItem} activeClassName={classes.active}>{title}</NavLink>\r\n    );\r\n};\r\n\r\nexport default NavItem;\r\n","import React from 'react';\r\nimport NavItem from \"../../common/NavItem/NavItem\";\r\nimport classes from \"./Nav.module.css\";\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <nav className={classes.routes}>\r\n            <NavItem path={\"/profile\"} title={\"Profile\"}/>\r\n            <NavItem path={\"/login\"} title={\"Login\"}/>\r\n            <NavItem path={\"/register\"} title={\"Registration\"}/>\r\n            <NavItem path={\"/restore\"} title={\"Restore password\"}/>\r\n            <NavItem path={\"/packs\"} title={\"Packs\"}/>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport classes from \"./Header.module.css\";\r\nimport Nav from \"./Nav/Nav\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={classes.header}>\r\n            <Nav/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React, { ButtonHTMLAttributes } from \"react\";\r\nimport classes from \"./Button.module.css\";\r\n\r\ninterface PropsType extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n    btnName: string\r\n    btnType?: \"green\" | \"red\"\r\n}\r\n\r\nexport const Button = React.memo(({btnType, btnName, ...rest}: PropsType) => {\r\n\r\n    let buttonClasses = `${classes.button} ${classes[btnType as \"green\" | \"red\"]}`\r\n\r\n    return (\r\n            <button className={buttonClasses} {...rest}>\r\n                {btnName}\r\n            </button>\r\n    )\r\n})\r\n","import React from 'react';\r\nimport classes from \"./Profile.module.css\";\r\nimport {Button} from \"../../../n1-main/m1-ui/common/Button/Button\";\r\nimport { UserDataType } from '../../../n1-main/m3-dal/auth-api';\r\nimport RemoveBTN from '../../../n1-main/m1-ui/common/Table/RemoveBTN/RemoveBTN';\r\n\r\ntype PropsType = {\r\n    userData: UserDataType\r\n    logout: () => void\r\n}\r\n\r\nconst Profile: React.FC<PropsType> = ({userData, logout}) => {\r\n\r\n    return (\r\n        <div className={classes.profile}>\r\n            <div className={classes.profile__container}>\r\n                <div className={classes.profile__title}>\r\n                    <h3>Profile page</h3>\r\n                </div>\r\n\r\n                <div className={classes.profile__info}>\r\n                    <table>\r\n                        <tbody>\r\n                        <tr>\r\n                            <th>Id:</th>\r\n                            <td>{userData._id}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Username:</th>\r\n                            <td>{userData.name}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Email:</th>\r\n                            <td>{userData.email}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Added:</th>\r\n                            <td>{userData.created}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Packs of cards:</th>\r\n                            <td>{userData.publicCardPacksCount}</td>\r\n                        </tr>\r\n                        </tbody>\r\n\r\n                    </table>\r\n                </div>\r\n                <div className={classes.profile__buttons}>\r\n                    <Button onClick={logout} btnName={\"Logout\"} btnType={\"red\"}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(Profile);\r\n","import axios from \"axios\"\r\n\r\n// const BASE_URL = \"http://localhost:7542/2.0\"\r\nconst BASE_URL = \"https://neko-back.herokuapp.com/2.0\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: BASE_URL,\r\n    withCredentials: true,\r\n})\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.post<UserDataType>(\"/auth/me\")\r\n    },\r\n    logInUserInApp(data: RequestLogInType) {\r\n        return  instance.post<UserDataType>(`/auth/login`, data)\r\n    },\r\n    logoutUserInApp() {\r\n        return  instance.delete<UserDataType>(`/auth/me`)\r\n    },\r\n    setNewPassword(data: RequestNewPasswordType) {\r\n        return instance.post<NewPasswordResponseType>(`/auth/set-new-password`, data)\r\n    },\r\n    register (data: RequestRegisterType) {\r\n        return instance.post<RegisterResponseType>(\"/auth/register\", data)\r\n    },\r\n    getLinkForResetPassword(value: string) {\r\n        return  instance.post<NewPasswordResponseType>(`/auth/forgot`, {\r\n            email: value,\r\n            from: \"admin\",\r\n            message: `<div style=\"background-color: lime; padding: 15px\">\r\n                    password recovery link: \r\n                    <a href=\"https://osbelkz.github.io/cards#/newPassword/$token$\"> \r\n                    link</a>\r\n                </div>` // после полной заливки на ghp, заменить ссылку на страницу new password on ghp\r\n        })\r\n    }\r\n}\r\n\r\nexport type RequestRegisterType = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\nexport type RequestLogInType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nexport type RequestNewPasswordType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\n\r\nexport type RequestResetPasswordType = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n}\r\n\r\ntype RegisterResponseType = {\r\n    \"addedUser\": UserDataType\r\n}\r\n\r\ntype NewPasswordResponseType = {\r\n    answer: boolean\r\n    html: boolean\r\n    info: string\r\n    success: boolean\r\n}\r\n\r\nexport type UserDataType = {\r\n    _id: string,\r\n    email: string\r\n    rememberMe: boolean\r\n    isAdmin: boolean\r\n    name: string\r\n    verified: boolean\r\n    publicCardPacksCount: number\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n    token: string\r\n    tokenDeathTime: number\r\n    avatar: null | string\r\n}\r\n\r\ntype ErrorType = {\r\n    error: string\r\n    email: string\r\n    in: string\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {setProfileUserDataAC} from \"./profileP-reducer\";\r\nimport {authAPI} from \"../../m3-dal/auth-api\";\r\nimport {setInitAppAC} from \"./app-reducer\";\r\n\r\nexport type LoginStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    isLoading: false as boolean,\r\n    isLoggedSuccess: false as boolean,\r\n    error: \"\" as string\r\n}\r\n\r\nexport const loginReducer = (state = initialState, action: ActionsType): LoginStateType => {\r\n    switch (action.type) {\r\n        case \"login/SET-VALUE-IS-LOGGED-SUCCESS\":\r\n            return {...state, isLoggedSuccess: action.isLoggedSuccess}\r\n        case \"login/SET-VALUE-IS-LOADING\":\r\n            return {...state, isLoading: action.isLoading}\r\n        case \"login/SET-ERROR-TEXT\":\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const logInUserInAppTC = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch) => {\r\n    dispatch(setValueIsLoading(true))\r\n    dispatch(setErrorText(\"\"))\r\n    authAPI.logInUserInApp({email, password, rememberMe})\r\n        .then(res => {\r\n            dispatch(setProfileUserDataAC({...res.data}))\r\n            dispatch(setInitAppAC(\"succeeded\"))\r\n            dispatch(setValueIsLoggedSuccess(true))\r\n            dispatch(setValueIsLoading(false))\r\n\r\n        })\r\n        .catch(e => {\r\n            dispatch(setValueIsLoading(false))\r\n            const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\r\n            dispatch(setErrorText(error))\r\n            setTimeout(dispatch, 5000, setErrorText(\"\"))\r\n        })\r\n}\r\n\r\nexport const setValueIsLoading = (isLoading: boolean) =>\r\n    ({type: \"login/SET-VALUE-IS-LOADING\", isLoading} as const)\r\n\r\nexport const setValueIsLoggedSuccess = (isLoggedSuccess: boolean) =>\r\n    ({type: \"login/SET-VALUE-IS-LOGGED-SUCCESS\", isLoggedSuccess} as const)\r\n\r\nexport const setErrorText = (error: string) =>\r\n    ({type: \"login/SET-ERROR-TEXT\", error} as const)\r\n\r\ntype ActionsType = ReturnType<typeof setValueIsLoading>\r\n    | ReturnType<typeof setValueIsLoggedSuccess>\r\n    | ReturnType<typeof setErrorText>\r\n    | ReturnType<typeof setProfileUserDataAC>\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI, UserDataType} from \"../../m3-dal/auth-api\";\r\nimport {setAppErrorAC, setInitAppAC} from \"./app-reducer\";\r\nimport {setErrorText, setValueIsLoggedSuccess} from \"./login-reducer\";\r\n\r\n\r\nenum ACTION_TYPE {\r\n    SET_USER = \"Profile/SET_USER\",\r\n}\r\n\r\n\r\nconst initialState = {\r\n    userData: null as UserDataType | null\r\n}\r\n\r\nexport const profileReducer = (state: ProfileStateType = initialState, action: ActionsType): ProfileStateType => {\r\n    switch (action.type) {\r\n\r\n        case ACTION_TYPE.SET_USER:\r\n            return {\r\n                ...state, ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\n\r\nexport const setProfileUserDataAC = (userData: UserDataType | null) => {\r\n    return {type: ACTION_TYPE.SET_USER, payload: {userData}}\r\n}\r\n\r\nexport const logoutUserInAppTC = () =>async (dispatch: Dispatch) => {\r\n    dispatch(setInitAppAC(\"loading\"))\r\n    dispatch(setAppErrorAC(\"\"))\r\n    try {\r\n        let response = authAPI.logoutUserInApp()\r\n        dispatch(setProfileUserDataAC(null))\r\n        dispatch(setValueIsLoggedSuccess(false))\r\n        dispatch(setInitAppAC(\"succeeded\"))\r\n    } catch (e) {\r\n        dispatch(setInitAppAC(\"failed\"))\r\n        dispatch(setErrorText(e.response ? e.response.data.error : \"unknown error\"))\r\n    }\r\n}\r\n\r\nexport type ActionsType = ReturnType<typeof setProfileUserDataAC>\r\n\r\nexport type ProfileStateType = typeof initialState\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI, RequestRegisterType} from \"../../m3-dal/auth-api\";\r\nimport { StatusType } from \"./app-reducer\";\r\n\r\nenum ACTION_TYPE {\r\n    SET_ERROR = \"SET_ERROR\",\r\n    SET_STATUS = \"SET_STATUS\"\r\n}\r\n\r\nconst initialState = {\r\n    error: \"\",\r\n    status: \"idle\" as StatusType,\r\n}\r\n\r\nexport const registerReducer = (state: RegisterStateType = initialState, action: ActionsType): RegisterStateType => {\r\n    switch (action.type) {\r\n        case ACTION_TYPE.SET_ERROR:\r\n        case ACTION_TYPE.SET_STATUS:\r\n            return {\r\n                ...state, ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nexport const setErrorAC = (error: string) => {\r\n    return {type: ACTION_TYPE.SET_ERROR, payload: {error}}\r\n}\r\nexport const setStatusAC = (status: StatusType) => {\r\n    return {type: ACTION_TYPE.SET_STATUS, payload: {status}}\r\n}\r\n\r\nexport type ActionsType =\r\n    ReturnType<typeof setErrorAC>\r\n    | ReturnType<typeof setStatusAC>\r\n\r\n// thunk\r\n\r\nexport const addUserTC = (data: RequestRegisterType) => async (dispatch: Dispatch) => {\r\n    dispatch(setStatusAC(\"loading\"))\r\n    dispatch(setErrorAC(\"\"))\r\n    try {\r\n        let response = await authAPI.register(data)\r\n        dispatch(setStatusAC(\"succeeded\"))\r\n    } catch (e) {\r\n        dispatch(setErrorAC(e.response ? e.response.data.error : \"unknown error\"))\r\n        dispatch(setStatusAC(\"failed\"))\r\n        setTimeout(dispatch, 5000, setErrorAC(\"\"))\r\n    }\r\n}\r\n\r\nexport type RegisterStateType = typeof initialState\r\n","import React, {useCallback} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../../../n1-main/m2-bll/store\";\r\nimport { logoutUserInAppTC } from '../../../n1-main/m2-bll/reducers/profileP-reducer';\r\nimport { UserDataType } from '../../../n1-main/m3-dal/auth-api';\r\n\r\nconst ProfileContainer = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const userData = useSelector<RootStateType, UserDataType | null>(state => state.profile.userData)\r\n\r\n    const logoutHandler = useCallback(() => {\r\n        dispatch(logoutUserInAppTC())\r\n    }, [])\r\n\r\n    if(!userData) return <div></div>\r\n\r\n    return <Profile userData={userData} logout={logoutHandler}/>\r\n};\r\n\r\nexport default ProfileContainer;\r\n","import React, {InputHTMLAttributes} from \"react\";\r\nimport classes from \"./Input.module.css\";\r\n\r\ninterface PropsType extends InputHTMLAttributes<HTMLInputElement> {\r\n    label?: string\r\n    errorText?: string\r\n    errorCondition?: boolean\r\n}\r\n\r\nexport const Input = React.memo(\r\n    ({label, errorCondition, errorText, ...rest }: PropsType) => {\r\n\r\n    return (\r\n            <div className={classes.input}>\r\n                <p className={classes.input__label}>{label}</p>\r\n                <input className={`${classes.input__elem} ${errorCondition ? classes.input__error : \"\"}`}\r\n                       {...rest}/>\r\n                {errorCondition ? <div\r\n                    className={classes.inputs__error_text}>{errorText}</div> : null}\r\n            </div>\r\n    )\r\n})\r\n","import React from 'react';\r\nimport classes from \"./Login.module.scss\";\r\nimport {Input} from \"../../../n1-main/m1-ui/common/Input/Input\";\r\nimport {Button} from \"../../../n1-main/m1-ui/common/Button/Button\";\r\nimport {useFormik} from \"formik\";\r\n\r\ntype RestorePropsType = {\r\n    isLoggedSuccess: boolean,\r\n    isLoading: boolean,\r\n    error: string,\r\n    handleOnSubmit: (email: string, password: string, rememberMe: boolean) => void\r\n}\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n}\r\n\r\nconst Login: React.FC<RestorePropsType> = React.memo(({error, isLoading, handleOnSubmit, isLoggedSuccess}) => {\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"\",\r\n            password: \"\",\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = \"Required!\"\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = \"Invalid email address\";\r\n            }\r\n            if (!values.password) {\r\n                errors.password = \"Required!\"\r\n            } else if (values.password.length < 7) {\r\n                errors.password = \"Too short password, min 7 symbols\"\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: values => {\r\n            handleOnSubmit(values.email, values.password, values.rememberMe)\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className={classes.login}>\r\n            <div className={classes.login__container}>\r\n            <form className={classes.login__form} onSubmit={formik.handleSubmit}>\r\n                <div className={classes.login__title}>\r\n                    <h3>Login page</h3>\r\n                </div>\r\n                <div className={classes.login__inputs}>\r\n                <Input\r\n                    label={\"Email\"}\r\n                    placeholder={\"Please, put your email\"}\r\n                    errorCondition={!!formik.errors.email && formik.touched.email}\r\n                    errorText={formik.errors.email}\r\n                    {...formik.getFieldProps(\"email\")}/>\r\n                <Input\r\n                    label={\"Password\"}\r\n                    type={\"password\"}\r\n                    placeholder={\"Please, put your password\"}\r\n                    errorCondition={!!formik.errors.password && formik.touched.password}\r\n                    errorText={formik.errors.password}\r\n                    {...formik.getFieldProps(\"password\")}/>\r\n                <div className={classes.login__checkbox}>\r\n                    <input\r\n                        id={\"remember\"}\r\n                        className={classes.checkbox}\r\n                        type={\"checkbox\"}\r\n                        checked={formik.values.rememberMe}\r\n                        {...formik.getFieldProps(\"rememberMe\")}/>\r\n                    <label htmlFor={\"remember\"}>remember me</label>\r\n                </div>\r\n\r\n                </div>\r\n                <div className={classes.login__buttons}>\r\n                    <Button\r\n                        type={\"submit\"}\r\n                        btnName={\"Login\"}\r\n                        disabled={!formik.isValid || (isLoading) || !formik.values.email}\r\n                        btnType={\"green\"}\r\n                    />\r\n                    <Button btnName={\"Reset\"} type={\"reset\"} onClick={() => formik.resetForm()}/>\r\n                </div>\r\n                {error && <div className={classes.infoTextRed}>{error}</div>}\r\n                {isLoading && <div className={classes.loading}>...Loading</div>}\r\n            </form>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Login;\r\n","import React, {useCallback} from 'react';\r\nimport Login from \"./Login\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../../../n1-main/m2-bll/store\";\r\nimport {LoginStateType, logInUserInAppTC} from \"../../../n1-main/m2-bll/reducers/login-reducer\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst LoginContainer = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const {isLoggedSuccess, isLoading, error } = useSelector<RootStateType, LoginStateType>(state => state.login)\r\n\r\n    const handleOnSubmit = useCallback((email: string, password: string, rememberMe: boolean) => {\r\n        dispatch(logInUserInAppTC(email, password,rememberMe))\r\n    }, []\r\n    )\r\n\r\n    if (isLoggedSuccess) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return (\r\n        <Login\r\n            isLoading={isLoading}\r\n            isLoggedSuccess={isLoggedSuccess}\r\n            error={error}\r\n            handleOnSubmit={handleOnSubmit}\r\n        />\r\n    );\r\n};\r\n\r\nexport default LoginContainer;\r\n","import React from 'react';\r\nimport {Input} from '../../../n1-main/m1-ui/common/Input/Input';\r\nimport classes from \"./Register.module.scss\";\r\nimport {Button} from \"../../../n1-main/m1-ui/common/Button/Button\";\r\nimport {useFormik} from \"formik\";\r\nimport {RequestRegisterType} from \"../../../n1-main/m3-dal/auth-api\";\r\nimport { StatusType } from '../../../n1-main/m2-bll/reducers/app-reducer';\r\nimport NavItem from \"../../../n1-main/m1-ui/common/NavItem/NavItem\";\r\n\r\ntype PropsType = {\r\n    onSubmit: (data: RequestRegisterType) => void\r\n    error: string\r\n    status: StatusType\r\n}\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    password2?: string\r\n}\r\n\r\nconst Register: React.FC<PropsType> = React.memo(({status, error, onSubmit}) => {\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            password2: '',\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = \"Invalid email address\";\r\n            }\r\n            if (!values.password || values.password.length < 7) {\r\n                errors.password = \"Must be 7 or more characters\"\r\n            }\r\n            if (values.password !== values.password2) {\r\n                errors.password2 = \"Passwords does not match\"\r\n            }\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (values) => {\r\n            onSubmit({email: values.email, password: values.password})\r\n        },\r\n    });\r\n\r\n    return (\r\n        <div className={classes.register}>\r\n            <div className={classes.register__container}>\r\n                <form className={classes.register__form} onSubmit={formik.handleSubmit}>\r\n                    <div className={classes.register__title}>\r\n                        <h3>Registration</h3>\r\n                    </div>\r\n                    <div className={classes.register__inputs}>\r\n                        <Input label={\"Email\"}\r\n                               errorCondition={!!formik.errors.email && formik.touched.email}\r\n                               placeholder={\"email\"}\r\n                               errorText={formik.errors.email}\r\n                               {...formik.getFieldProps(\"email\")}/>\r\n                        <Input label={\"Password\"}\r\n                               errorCondition={!!formik.errors.password && formik.touched.password}\r\n                               type={\"password\"}\r\n                               placeholder={\"password\"}\r\n                               errorText={formik.errors.password}\r\n                               {...formik.getFieldProps(\"password\")}/>\r\n                        <Input label={\"Repeat password\"}\r\n                               errorCondition={!!formik.errors.password2 && formik.touched.password2}\r\n                               type={\"password\"}\r\n                               errorText={formik.errors.password2}\r\n                               placeholder={\"confirm password\"}\r\n                               {...formik.getFieldProps(\"password2\")} />\r\n                    </div>\r\n                    <div className={classes.register__buttons}>\r\n                        <Button btnName={\"Join\"} btnType={\"green\"} type={\"submit\"}\r\n                                disabled={!formik.isValid || (status === \"loading\") || !formik.values.email}/>\r\n                        <Button btnName={\"Reset\"} type={\"reset\"} onClick={() => formik.resetForm()}/>\r\n                    </div>\r\n                    <NavItem path={\"/login\"} title={\"Login\"}/>\r\n                    {error && <div className={classes.register__error}>{error}</div>}\r\n                    {status === \"loading\" && <div className={classes.register__loading}>...Loading</div>}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default Register;\r\n","import React, {useCallback} from 'react';\r\nimport Register from \"./Register\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {addUserTC, RegisterStateType} from \"../../../n1-main/m2-bll/reducers/register-reducer\";\r\nimport {RootStateType} from \"../../../n1-main/m2-bll/store\";\r\nimport { RequestRegisterType } from '../../../n1-main/m3-dal/auth-api';\r\n\r\n\r\nconst RegisterContainer = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {error, status} = useSelector<RootStateType, RegisterStateType>(state => state.register)\r\n\r\n    const onSubmitHandler = useCallback((values: RequestRegisterType) => {\r\n        dispatch(addUserTC(values))\r\n    }, [])\r\n\r\n    if (status===\"succeeded\") {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n    return (\r\n        <Register onSubmit={onSubmitHandler} error={error} status={status}/>\r\n    );\r\n};\r\n\r\nexport default RegisterContainer;\r\n","import React from \"react\";\r\nimport classes from \"./Restore.module.scss\";\r\nimport {Input} from \"../../../n1-main/m1-ui/common/Input/Input\";\r\nimport {Button} from \"../../../n1-main/m1-ui/common/Button/Button\";\r\nimport NavItem from \"../../../n1-main/m1-ui/common/NavItem/NavItem\";\r\nimport {useFormik} from \"formik\";\r\n\r\ntype RestorePropsType = {\r\n    textAfterRequest: string,\r\n    isSentSuccess: boolean,\r\n    isLoading: boolean,\r\n    handleOnSubmit: (value: string) => void\r\n}\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n}\r\n\r\nconst Restore: React.FC<RestorePropsType> = React.memo(({handleOnSubmit, isLoading, isSentSuccess, textAfterRequest}) => {\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: \"\"\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = \"Field is required!\"\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = \"Invalid email address\";\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: values => {\r\n            handleOnSubmit(values.email)\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className={classes.restore}>\r\n            <div className={classes.restore__container}>\r\n                <form className={classes.restore__form} onSubmit={formik.handleSubmit}>\r\n                    <div className={classes.restore__title}>\r\n                        <h3>Restore password</h3>\r\n                    </div>\r\n                    <div className={classes.restore__inputs}>\r\n                        <Input\r\n                            label={\"Email\"}\r\n                            placeholder={\"Please, put your email\"}\r\n                            errorCondition={!!formik.errors.email && formik.touched.email}\r\n                            errorText={formik.errors.email}\r\n                            {...formik.getFieldProps(\"email\")}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.restore__buttons}>\r\n                        <Button\r\n                            type={\"submit\"}\r\n                            btnName={\"Send email\"}\r\n                            disabled={!formik.isValid || (isLoading) || !formik.values.email}\r\n                            btnType={\"green\"}/>\r\n                        <Button btnName={\"Reset\"} type={\"reset\"} onClick={() => formik.resetForm()}/>\r\n                    </div>\r\n                    <NavItem path={\"/login\"} title={\"Login\"}/>\r\n                    {textAfterRequest && <div className={\r\n                        isSentSuccess ? classes.infoTextGreen : classes.infoTextRed\r\n                    }>{textAfterRequest}</div>}\r\n                    {isLoading && <div className={classes.loading}>...Loading</div>}\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Restore;\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../../m3-dal/auth-api\";\r\n\r\nexport type RestorePasswordStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    isSentSuccess: false as boolean,\r\n    textAfterRequest: \"\" as string,\r\n    isLoading: false as boolean\r\n}\r\n\r\nexport const restorePasswordReducer = (state = initialState, action: ActionsType): RestorePasswordStateType => {\r\n    switch (action.type) {\r\n        case \"restore/SET-VALUE-IS-SENT-SUCCESS\":\r\n            return {...state, isSentSuccess: action.value}\r\n        case \"restore/SET-TEXT-AFTER-REQUEST\":\r\n            return {...state, textAfterRequest: action.textAfterRequest}\r\n        case \"restore/SET-VALUE-IS-LOADING\":\r\n            return {...state, isLoading: action.isLoading}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const restoreTC = (value: string) => (dispatch: Dispatch) => {\r\n    dispatch(setValueIsLoading(true))\r\n    authAPI.getLinkForResetPassword(value)\r\n        .then(res => {\r\n            dispatch(setValueIsSentSuccess(true))\r\n            dispatch(setRestoreTextAfterRequest(res.data.info))\r\n            dispatch(setValueIsLoading(false))\r\n        })\r\n        .catch((error: {response: {data: {error: string}}})=> {\r\n            dispatch(setRestoreTextAfterRequest(error.response.data.error))\r\n            dispatch(setValueIsLoading(false))\r\n            setTimeout(dispatch, 5000, setRestoreTextAfterRequest(\"\"))\r\n        })\r\n}\r\n\r\nexport const setValueIsSentSuccess = (value: boolean) =>\r\n    ({type: \"restore/SET-VALUE-IS-SENT-SUCCESS\", value} as const)\r\n\r\nexport const setRestoreTextAfterRequest = (textAfterRequest: string) =>\r\n    ({type: \"restore/SET-TEXT-AFTER-REQUEST\", textAfterRequest} as const)\r\n\r\nexport const setValueIsLoading = (isLoading: boolean) =>\r\n    ({type: \"restore/SET-VALUE-IS-LOADING\", isLoading} as const)\r\n\r\ntype ActionsType = ReturnType<typeof setValueIsSentSuccess>\r\n    | ReturnType<typeof setRestoreTextAfterRequest>\r\n    | ReturnType<typeof setValueIsLoading>\r\n\r\n","import React, {useCallback} from 'react';\r\nimport Restore from \"./Restore\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../../../n1-main/m2-bll/store\";\r\nimport {RestorePasswordStateType, restoreTC} from \"../../../n1-main/m2-bll/reducers/restorePassword-reducer\";\r\n\r\nconst RestoreContainer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {textAfterRequest, isLoading, isSentSuccess} =\r\n        useSelector<RootStateType, RestorePasswordStateType>(state => state.restorePassword)\r\n\r\n    const handleOnSubmit = useCallback((value: string) => {\r\n        dispatch(restoreTC(value))\r\n        }, []\r\n    )\r\n\r\n    return (\r\n        <Restore\r\n            textAfterRequest={textAfterRequest}\r\n            isSentSuccess={isSentSuccess}\r\n            handleOnSubmit={handleOnSubmit}\r\n            isLoading={isLoading}\r\n        />\r\n    );\r\n};\r\n\r\nexport default RestoreContainer;\r\n","import React from \"react\";\r\nimport classes from \"./NewPassword.module.scss\";\r\nimport {Input} from \"../../../n1-main/m1-ui/common/Input/Input\";\r\nimport {Button} from \"../../../n1-main/m1-ui/common/Button/Button\";\r\nimport NavItem from \"../../../n1-main/m1-ui/common/NavItem/NavItem\";\r\nimport {useFormik} from \"formik\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\ntype NewPasswordPropsType = {\r\n    isSetNewPassword: boolean\r\n    error: string\r\n    isOk: string\r\n    isLoading: boolean\r\n    handleOnSubmit: (value: string, token: string) => void\r\n}\r\n\r\ntype FormikErrorType = {\r\n    password1?: string\r\n    password2?: string\r\n}\r\n\r\n\r\nconst NewPassword: React.FC<NewPasswordPropsType> = React.memo(({isLoading, handleOnSubmit, error, isOk, isSetNewPassword}) => {\r\n\r\n    const {token} = useParams<{ token: string }>()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            password1: \"\",\r\n            password2: \"\"\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.password1) {\r\n                errors.password1 = \"Field is required!\"\r\n            } else if (values.password1.length < 8) {\r\n                errors.password1 = \"Too short password, min 8 symbols\"\r\n            }\r\n            if (!values.password2) {\r\n                errors.password2 = \"Field is required!\"\r\n            } else if (values.password2.length < 8) {\r\n                errors.password2 = \"Too short password, min 8 symbols\"\r\n            } else if (values.password1 !== values.password2) {\r\n                errors.password2 = \"Both fields must be equal!\"\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: values => {\r\n            handleOnSubmit(values.password1, token)\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className={classes.newPassword}>\r\n            <div className={classes.newPassword__container}>\r\n                <form className={classes.newPassword__form} onSubmit={formik.handleSubmit}>\r\n                    <div className={classes.newPassword__title}>\r\n                        <h3>New password page</h3>\r\n                    </div>\r\n                    <div className={classes.newPassword__inputs}>\r\n                        <Input\r\n                            label={\"New password\"}\r\n                            placeholder={\"Please, put new password\"}\r\n                            errorCondition={!!formik.errors.password1 && formik.touched.password1}\r\n                            errorText={formik.errors.password1}\r\n                            {...formik.getFieldProps(\"password1\")}\r\n\r\n                        />\r\n                        <Input\r\n                            label={\"Repeat new password\"}\r\n                            placeholder={\"Put new password again\"}\r\n                            errorCondition={!!formik.errors.password2 && formik.touched.password2}\r\n                            errorText={formik.errors.password2}\r\n                            {...formik.getFieldProps(\"password2\")}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.newPassword__buttons}>\r\n                        <Button\r\n                            type={\"submit\"}\r\n                            btnName={\"Set new password\"}\r\n                            disabled={!formik.isValid || (isLoading)}\r\n                            btnType={\"green\"}/>\r\n                        <Button btnName={\"Reset\"} type={\"reset\"} onClick={() => formik.resetForm()}/>\r\n                    </div>\r\n                    <NavItem path={\"/login\"} title={\"Login\"}/>\r\n                </form>\r\n                {!isSetNewPassword && error\r\n                    ? <div className={classes.infoTextRed}>{error}</div>\r\n                    : \"\"\r\n                }\r\n                {isSetNewPassword && isOk\r\n                    ? <div className={classes.infoTextGreen}>{isOk}</div>\r\n                    : \"\"\r\n                }\r\n                {isLoading && <div className={classes.loading}>...Loading</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default NewPassword;\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../../m3-dal/auth-api\";\r\n\r\nexport type NewPasswordStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    isSetNewPassword: false as boolean,\r\n    error: \"\" as string,\r\n    isOk: \"\" as string,\r\n    isLoading: false as boolean\r\n}\r\n\r\nexport const newPasswordReducer = (state = initialState, action: ActionsType): NewPasswordStateType => {\r\n    switch (action.type) {\r\n        case \"newPassword/SET-VALUE-IS-SET-NEW-PASSWORD\":\r\n            return {...state, isSetNewPassword: action.value}\r\n        case \"newPassword/SET-ERROR-TEXT\":\r\n            return {...state, error: action.error}\r\n        case \"newPassword/SET-VALUE-IS-OK\":\r\n            return {...state, isOk: action.text}\r\n        case \"restore/SET-VALUE-IS-LOADING\":\r\n            return {...state, isLoading: action.isLoading}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setNewPasswordTC = (newPassword: string, token: string) => (dispatch: Dispatch) => {\r\n    dispatch(setValueIsLoading(true))\r\n    authAPI.setNewPassword({\r\n        password: newPassword,\r\n        resetPasswordToken: token\r\n    })\r\n        .then(res => {\r\n            dispatch(setValueIsSetNewPassword(true))\r\n            dispatch(setValueIsOk(res.data.info))\r\n            dispatch(setValueIsLoading(false))\r\n        })\r\n        .catch(error => {\r\n            dispatch(setErrorText(error.response.data.error))\r\n            dispatch(setValueIsLoading(false))\r\n            setTimeout(dispatch, 5000, setErrorText(\"\"))\r\n        })\r\n}\r\n\r\nexport const setValueIsSetNewPassword = (value: boolean) =>\r\n    ({type: \"newPassword/SET-VALUE-IS-SET-NEW-PASSWORD\", value} as const)\r\n\r\nexport const setErrorText = (error: string) =>\r\n    ({type: \"newPassword/SET-ERROR-TEXT\", error} as const)\r\n\r\nexport const setValueIsOk = (text: string) =>\r\n    ({type: \"newPassword/SET-VALUE-IS-OK\", text} as const)\r\n\r\nexport const setValueIsLoading = (isLoading: boolean) =>\r\n    ({type: \"restore/SET-VALUE-IS-LOADING\", isLoading} as const)\r\n\r\ntype ActionsType = ReturnType<typeof setValueIsSetNewPassword>\r\n    | ReturnType<typeof setErrorText>\r\n    | ReturnType<typeof setValueIsOk>\r\n    | ReturnType<typeof setValueIsLoading>\r\n","import React, {useCallback} from 'react';\r\nimport NewPassword from \"./NewPassword\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../../../n1-main/m2-bll/store\";\r\nimport {NewPasswordStateType, setNewPasswordTC} from \"../../../n1-main/m2-bll/reducers/newPassword-reducer\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst NewPasswordContainer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {isSetNewPassword, isLoading, error, isOk} =\r\n        useSelector<RootStateType, NewPasswordStateType>(state => state.newPassword)\r\n\r\n\r\n    const handleOnSubmit = useCallback((newPassword: string, token: string) => {\r\n        dispatch(setNewPasswordTC(newPassword, token))\r\n    }, []\r\n    )\r\n\r\n    if (isSetNewPassword) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n    return (\r\n        <NewPassword\r\n            isSetNewPassword={isSetNewPassword}\r\n            error={error}\r\n            handleOnSubmit={handleOnSubmit}\r\n            isOk={isOk}\r\n            isLoading={isLoading}\r\n        />\r\n    );\r\n};\r\n\r\nexport default NewPasswordContainer;\r\n","import React from \"react\";\r\nimport classes from \"./Preloader.module.scss\";\r\n\r\nexport function Preloader() {\r\n    return (\r\n        <div className={classes.container}>\r\n            <div className={classes.ldsFacebook}>\r\n                <div></div><div></div><div></div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n//\r\n","import React, {useEffect} from 'react';\r\nimport {Preloader} from \"../Preloader/Preloader\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../../../m2-bll/store\";\r\nimport {authMeTC, StatusType} from \"../../../m2-bll/reducers/app-reducer\";\r\n\r\nconst AuthRedirect: React.FC = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const initApp = useSelector<RootStateType, StatusType>(state => state.app.initApp)\r\n    const isLoggedSuccess = useSelector<RootStateType, boolean>(state => state.login.isLoggedSuccess)\r\n\r\n\r\n    useEffect(() => {\r\n        if (initApp === \"idle\" && !isLoggedSuccess) {\r\n            dispatch(authMeTC())\r\n        }\r\n    }, [initApp, isLoggedSuccess])\r\n\r\n    if (initApp === \"loading\" || initApp === \"idle\") {\r\n        return <Preloader/>\r\n    }\r\n    if (!isLoggedSuccess) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AuthRedirect;\r\n","import {CardPackType, packsApi} from \"../../m3-dal/packs-api\"\r\nimport {Dispatch} from \"redux\";\r\nimport {RootStateType} from \"../store\";\r\nimport { StatusType } from \"./app-reducer\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport {setCardsPageStatus} from \"./cards-reducer\";\r\n\r\nenum ACTION_TYPES {\r\n    CHANGE_PAGE = \"packs/CHANGE_PAGE\",\r\n    CHANGE_PAGE_COUNT = \"packs/CHANGE_PAGE_COUNT\",\r\n    SET_TOTAL_COUNT = \"packs/SET_TOTAL_COUNT\",\r\n    SET_PACKS = \"packs/SET_PACKS\",\r\n    SET_SEARCH_NAME = \"packs/SET_SEARCH_NAME\",\r\n    SET_SEARCH_PARAMS = \"packs/SET_SEARCH_PARAMS\",\r\n    SET_IS_LOADING = \"packs/SET_IS_LOADING\",\r\n    SET_SORT_PACKS = \"packs/SET_SORT_PACKS\"\r\n}\r\n\r\n\r\nconst initialState = {\r\n    packs: [] as Array<CardPackType>,\r\n    cardPacksTotalCount: 0,\r\n    page: 1,\r\n    pageCount: 10,\r\n    min: undefined as undefined | number,\r\n    max: undefined as undefined | number,\r\n    pageStatus: \"idle\" as StatusType,\r\n    searchParams: {\r\n        packName: \"\" as string | undefined,\r\n        sortPacks: \"\" as string | undefined,\r\n        min: undefined as undefined | number,\r\n        max: undefined as undefined | number,\r\n    }\r\n}\r\n\r\nexport const packsReducer = (state: PacksStateType = initialState, action: ActionsType): PacksStateType => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.CHANGE_PAGE:\r\n        case ACTION_TYPES.CHANGE_PAGE_COUNT:\r\n        case ACTION_TYPES.SET_TOTAL_COUNT:\r\n        case ACTION_TYPES.SET_PACKS:\r\n        case ACTION_TYPES.SET_IS_LOADING:\r\n            return {\r\n                ...state, ...action.payload\r\n            }\r\n        case ACTION_TYPES.SET_SEARCH_NAME:\r\n            return {\r\n                ...state, searchParams: {...state.searchParams, packName: action.payload.packName}\r\n            }\r\n        case ACTION_TYPES.SET_SORT_PACKS:\r\n        case ACTION_TYPES.SET_SEARCH_PARAMS:\r\n            return {\r\n                ...state, searchParams: {...state.searchParams,...action.payload}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n// actions\r\n\r\nexport const changePageAC = (page: number) => {\r\n    return {type: ACTION_TYPES.CHANGE_PAGE, payload: {page}} as const\r\n}\r\nexport const changePageCountAC = (pageCount: number) => {\r\n    return {type: ACTION_TYPES.CHANGE_PAGE_COUNT, payload: {pageCount}} as const\r\n}\r\nconst setTotalCountAC = (cardPacksTotalCount: number) => {\r\n    return {type: ACTION_TYPES.SET_TOTAL_COUNT, payload: {cardPacksTotalCount}} as const\r\n}\r\nconst setPacksAC = (packs: Array<CardPackType>, cardPacksTotalCount: number, min: number, max: number, pageStatus: StatusType) => {\r\n    return {type: ACTION_TYPES.SET_PACKS, payload: {packs, cardPacksTotalCount, min, max, pageStatus}} as const\r\n}\r\nexport const setSearchNameAC = (packName: string) => {\r\n    return {type: ACTION_TYPES.SET_SEARCH_NAME, payload: {packName}} as const\r\n}\r\nexport const setSearchParamsAC = (packName?: string, min?: number, max?: number) => {\r\n    return {type: ACTION_TYPES.SET_SEARCH_PARAMS, payload: {packName, min, max}} as const\r\n}\r\nexport const setPageStatusAC = (pageStatus: StatusType) => {\r\n    return {type: ACTION_TYPES.SET_IS_LOADING, payload: {pageStatus}} as const\r\n}\r\nexport const setPacksSortColumnAC = (sortPacks: string) => {\r\n    return {type: ACTION_TYPES.SET_SORT_PACKS, payload: {sortPacks}} as const\r\n}\r\n\r\n\r\n// thunks\r\n\r\nexport const getPacksTC = (selectedPage?: number) => async (dispatch: Dispatch, getState: () => RootStateType) => {\r\n    const {page, pageCount, searchParams: {packName, min, max, sortPacks}} = getState().packs\r\n    dispatch(setPageStatusAC(\"loading\"))\r\n    try {\r\n        const response = await packsApi.getPacks({page: selectedPage || page, pageCount, packName, min, max, sortPacks})\r\n        dispatch(setPacksAC(response.data.cardPacks,\r\n            response.data.cardPacksTotalCount,\r\n            response.data.minCardsCount,\r\n            response.data.maxCardsCount,\r\n            \"succeeded\"))\r\n        selectedPage && dispatch(changePageAC(selectedPage))\r\n    } catch (e) {\r\n        alert(e.response.data.error)\r\n        dispatch(setPageStatusAC(\"failed\"))\r\n    } finally {\r\n\r\n    }\r\n}\r\nexport const deletePackTC = (id: string) => async (dispatch: ThunkDispatch<RootStateType, {}, ActionsType>) => {\r\n    dispatch(setPageStatusAC(\"loading\"))\r\n    try {\r\n        const response = await packsApi.deletePack(id)\r\n        await dispatch(getPacksTC())\r\n    } catch (e) {\r\n        alert(e.response.data.error)\r\n        dispatch(setPageStatusAC(\"failed\"))\r\n    }\r\n}\r\nexport const createPackTC = (name: string) => async (dispatch: ThunkDispatch<RootStateType, {}, ActionsType>) => {\r\n    dispatch(setPageStatusAC(\"loading\"))\r\n    try {\r\n        const response = await packsApi.createPack({name})\r\n        await dispatch(getPacksTC(1))\r\n    } catch (e) {\r\n        alert(e.response.data.error)\r\n        dispatch(setPageStatusAC(\"failed\"))\r\n    }\r\n}\r\n//under construction\r\nexport const updatePackTC = (name: string, _id: string) => async (dispatch: ThunkDispatch<RootStateType, {}, ActionsType>) => {\r\n    dispatch(setPageStatusAC(\"loading\"))\r\n    try {\r\n        const response = await packsApi.updatePack({name, _id})\r\n        await dispatch(getPacksTC(1))\r\n    } catch (e) {\r\n        alert(e.response.data.error)\r\n        dispatch(setPageStatusAC(\"failed\"))\r\n    }\r\n}\r\n\r\nexport type PacksStateType = typeof initialState\r\nexport type SearchParamsType = typeof initialState.searchParams\r\n\r\n\r\ntype ActionsType = ReturnType<typeof changePageAC>\r\n    | ReturnType<typeof changePageCountAC>\r\n    | ReturnType<typeof setTotalCountAC>\r\n    | ReturnType<typeof setPacksAC>\r\n    | ReturnType<typeof setSearchNameAC>\r\n    | ReturnType<typeof setSearchParamsAC>\r\n    | ReturnType<typeof setPageStatusAC>\r\n    | ReturnType<typeof setPacksSortColumnAC>\r\n","import React from 'react';\r\nimport classes from \"./Table.module.scss\";\r\nimport {StatusType} from \"../../../m2-bll/reducers/app-reducer\";\r\n\r\n\r\nexport interface ITableModel {\r\n    title: (index: number) => JSX.Element;\r\n    render: (dataItem: any, modelIndex: number, dataIndex: number) => JSX.Element;\r\n}\r\n\r\ninterface ITableProps {\r\n    model: ITableModel[];\r\n    data: any;\r\n    pageStatus: StatusType\r\n}\r\n\r\nconst Table: React.FC<ITableProps> = React.memo(({model, data, pageStatus}) => {\r\n\r\n    // console.log(\"table\")\r\n\r\n    return (\r\n        <table className={`${classes.table} ${pageStatus===\"loading\" ? classes.table__loading : \"\"}`}>\r\n            <thead>\r\n            <tr className={classes.table__row_header}>\r\n                {model.map((m: ITableModel, index: number) => m.title(index))}\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {data.map((dataItem: any, dataIndex: number) => (\r\n                <tr className={classes.table__row_data} key={dataItem._id}>\r\n                    {model.map((m, modelIndex) => m.render(dataItem, modelIndex, dataIndex))}\r\n                </tr>\r\n            ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n})\r\n\r\nexport default Table;\r\n","import React, { ButtonHTMLAttributes } from \"react\";\r\nimport classes from \"./TableButton.module.scss\";\r\n\r\ninterface PropsType extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n    btnName: string\r\n    btnType?: \"green\" | \"red\"\r\n}\r\n\r\nexport const TableButton = React.memo(({btnType, btnName, ...rest}: PropsType) => {\r\n\r\n    let buttonClasses = `${classes.button} ${classes[btnType as \"green\" | \"red\"]}`\r\n\r\n    return (\r\n            <button className={buttonClasses} {...rest}>\r\n                {btnName}\r\n            </button>\r\n    )\r\n})\r\n","import classes from './EditableTableCell.module.scss';\r\nimport React, {ChangeEvent, useState} from 'react';\r\nimport {TableButton} from '../TableButton/TableButton';\r\n\r\n\r\ntype PropsType = {\r\n    text: string\r\n    changeText: (text: string) => void\r\n}\r\n\r\nconst EditableTableCell: React.FC<PropsType> = React.memo(({text, changeText}) => {\r\n\r\n    const [edit, setEdit] = useState(false)\r\n    const [editableText, setEditableText] = useState(text)\r\n\r\n    const changeTextHandler = () => {\r\n        setEdit(false)\r\n        if (text !== editableText) {\r\n            changeText(editableText)\r\n        }\r\n    }\r\n\r\n    const enableEditMode = () => setEdit(true)\r\n    const changeEditableText = (e: ChangeEvent<HTMLInputElement>) => setEditableText(e.target.value)\r\n\r\n    return (\r\n        <div className={classes.editable_cell}>\r\n            {edit\r\n                ? <input className={classes.editable_cell__input}\r\n                         type=\"text\"\r\n                         onChange={changeEditableText}\r\n                         autoFocus\r\n                         value={editableText}\r\n                />\r\n                : <div onDoubleClick={enableEditMode}>{editableText}</div>\r\n            }\r\n            {edit\r\n                ? <TableButton btnName={\"save\"} onClick={changeTextHandler}/>\r\n                : <TableButton btnName={\"edit\"} onClick={enableEditMode}/>\r\n            }\r\n\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default EditableTableCell;\r\n","import React, {ChangeEvent} from \"react\";\r\nimport classes from \"./Slider.module.scss\";\r\nimport {StatusType} from \"../../../m2-bll/reducers/app-reducer\";\r\n\r\ntype SliderPropsType = {\r\n    setMin:(value: number) => void\r\n    setMax:(value: number) => void\r\n    min: number\r\n    max: number\r\n    minValue: number\r\n    maxValue: number\r\n    stepValue: number\r\n    pageStatus: StatusType\r\n}\r\n\r\nexport const Slider: React.FC<SliderPropsType> = React.memo((props) => {\r\n\r\n    const rangeHandler1 = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let value = +e.currentTarget.value\r\n        props.setMin(value)\r\n        if (props.max <= value) {\r\n            props.setMax(value)\r\n        }\r\n    }\r\n\r\n    const rangeHandler2 = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let value = +e.currentTarget.value\r\n        props.setMax(value)\r\n        if (props.min >= value) {\r\n            props.setMin(value)\r\n        }\r\n    }\r\n\r\n    let leftMin = props.min / (props.maxValue/100) - 2.5\r\n    let leftMax = props.max / (props.maxValue/100) - 2.5\r\n\r\n    return <div className={classes.doubleRange}>\r\n        <div>\r\n            <div className={classes.rangeNum}\r\n                style={{left: `${leftMin}%`}}>\r\n                {props.min}\r\n            </div>\r\n            <input\r\n                type={\"range\"}\r\n                min={props.minValue}\r\n                max={props.maxValue}\r\n                step={props.stepValue}\r\n                value={props.min}\r\n                className={classes.range}\r\n                onChange={rangeHandler1}\r\n                disabled={props.pageStatus === \"loading\"}\r\n            />\r\n        </div>\r\n\r\n        <div className={classes.rangeNum}\r\n            style={{left: `${leftMax}%`}}>\r\n            {props.max}\r\n        </div>\r\n        <input\r\n            type={\"range\"}\r\n            min={props.minValue}\r\n            max={props.maxValue}\r\n            step={props.stepValue}\r\n            value={props.max}\r\n            className={classes.range}\r\n            onChange={rangeHandler2}\r\n            disabled={props.pageStatus === \"loading\"}\r\n        />\r\n    </div>\r\n})\r\n","import React, {ChangeEvent, useCallback, useState} from \"react\";\r\nimport classes from \"./Search.module.scss\";\r\nimport {Input} from \"../Input/Input\";\r\nimport {Button} from \"../Button/Button\";\r\nimport {Slider} from \"../Slider/Slider\";\r\nimport {StatusType} from \"../../../m2-bll/reducers/app-reducer\";\r\n\r\ntype SearchPropsType = {\r\n    name: string | undefined\r\n    label: string\r\n    minValue: number\r\n    maxValue: number\r\n    stepValue: number\r\n    setSearchParams: (searchName?: string, min?: number, max?: number) => void\r\n    pageStatus: StatusType\r\n}\r\n\r\nexport const Search: React.FC<SearchPropsType> =\r\n    React.memo(({name, minValue, maxValue, label, stepValue, setSearchParams, pageStatus}) => {\r\n\r\n    const [searchValue, setSearchValue] = useState(name)\r\n    const [min, setMin] = useState(minValue)\r\n    const [max, setMax] = useState(maxValue)\r\n\r\n    const inputOnChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        setSearchValue(e.currentTarget.value)\r\n    }, [])\r\n\r\n    const onSearchClick = useCallback(() => {\r\n        setSearchParams(searchValue, min, max)\r\n    }, [])\r\n\r\n    return <div className={classes.uniSearch}>\r\n        <h3>{label}</h3>\r\n        <Input\r\n            value={searchValue}\r\n            onChange={inputOnChangeHandler}\r\n            disabled={pageStatus === \"loading\"}\r\n        />\r\n        <div className={classes.slider}>\r\n            <Slider\r\n                setMin={setMin}\r\n                setMax={setMax}\r\n                min={min}\r\n                max={max}\r\n                minValue={minValue}\r\n                maxValue={maxValue}\r\n                stepValue={stepValue}\r\n                pageStatus={pageStatus}\r\n            />\r\n        </div>\r\n            <Button\r\n                btnName={\"Search\"}\r\n                onClick={onSearchClick}\r\n                disabled={pageStatus === \"loading\"}\r\n            />\r\n    </div>\r\n})\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport classes from \"./Paginator.module.scss\";\r\nimport {Button} from \"../Button/Button\";\r\nimport {Input} from \"../Input/Input\";\r\nimport {StatusType} from \"../../../m2-bll/reducers/app-reducer\";\r\n\r\ntype PaginatorPropsType = {\r\n    currentPage: number\r\n    itemsTotalCount: number\r\n    pageCount: number\r\n    changePage: (page: number) => void\r\n    changePageCount: (page: number) => void\r\n    itemsName: string\r\n    pageStatus: StatusType\r\n}\r\n\r\nexport const Paginator: React.FC<PaginatorPropsType> =\r\n    React.memo(({currentPage, pageCount, changePageCount, changePage, itemsName, itemsTotalCount, pageStatus}) => {\r\n    const [pageNumber, setPageNumber] = useState(currentPage)\r\n    let pageAmount = Math.ceil(itemsTotalCount / pageCount)\r\n\r\n    const pageCountChangeHandler = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        let value = +e.currentTarget.value\r\n        changePageCount(value)\r\n    }\r\n    const onePreviousPage = () => {\r\n        changePage(pageNumber - 1)\r\n        setPageNumber(pageNumber - 1)\r\n    }\r\n    const pageChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPageNumber(+e.currentTarget.value)\r\n    }\r\n\r\n    const pageSetHandler = () => {\r\n        if (pageNumber < 1) {\r\n            changePage(1)\r\n            setPageNumber(1)\r\n        } else if (pageNumber > pageAmount) {\r\n            changePage(pageAmount)\r\n            setPageNumber(pageAmount)\r\n        } else {\r\n            changePage(pageNumber)\r\n        }\r\n    }\r\n    const oneNextPage = () => {\r\n        changePage(pageNumber + 1)\r\n        setPageNumber(pageNumber + 1)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n        if (e.key === 'Enter') {\r\n            pageSetHandler()\r\n        }\r\n    }\r\n\r\n    return <div className={classes.paginator}>\r\n        <div className={classes.leftBlock}>\r\n            {`Total ${itemsName}: ${itemsTotalCount}. ${itemsName} per page:`}\r\n            <select onChange={pageCountChangeHandler} value={pageCount} disabled={pageStatus === \"loading\"}>\r\n                <option>10</option>\r\n                <option>20</option>\r\n                <option>50</option>\r\n                <option>100</option>\r\n            </select>\r\n        </div>\r\n        <div className={classes.rightBlock}>\r\n            <Button\r\n                btnName={`Prev`}\r\n                onClick={onePreviousPage}\r\n                disabled={currentPage < 2 || pageStatus === \"loading\"}\r\n            />\r\n            {`Page: `}\r\n            {pageNumber < 1}\r\n            <Input type={\"number\"}\r\n                   value={pageNumber}\r\n                   step={1} min={1}\r\n                   max={pageAmount}\r\n                   onChange={pageChangeHandler}\r\n                   onBlur={pageSetHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   disabled={pageStatus === \"loading\"}\r\n            />\r\n            of {pageAmount}\r\n            <Button\r\n                btnName={`Next`}\r\n                onClick={oneNextPage}\r\n                disabled={currentPage === pageAmount || pageStatus === \"loading\"}\r\n            />\r\n        </div>\r\n    </div>\r\n})\r\n","import React from \"react\";\r\nimport classes from \"./ColumnSorting.module.scss\";\r\nimport {Button} from \"../Button/Button\";\r\nimport {StatusType} from \"../../../m2-bll/reducers/app-reducer\";\r\n\r\ntype ColumnSortingPropsType = {\r\n    onClick: (value: number) => void\r\n    pageStatus: StatusType\r\n}\r\n\r\nexport const ColumnSorting: React.FC<ColumnSortingPropsType> = React.memo(({onClick, pageStatus}) => {\r\n\r\n    const upChangeHandler = () => {\r\n        onClick(1)\r\n    }\r\n    const downChangeHandler = () => {\r\n        onClick(0)\r\n    }\r\n\r\n    return <div className={classes.container}>\r\n        <Button\r\n            btnName={\"⇑\"}\r\n            className={classes.up}\r\n            onClick={upChangeHandler}\r\n            disabled={pageStatus === \"loading\"}\r\n        />\r\n        <Button\r\n            btnName={\"⇓\"}\r\n            className={classes.down}\r\n            onClick={downChangeHandler}\r\n            disabled={pageStatus === \"loading\"}\r\n        />\r\n    </div>\r\n})","import React from \"react\";\r\nimport classes from \"./Modal.module.scss\";\r\n\r\ntype ModalPropsType = {\r\n    active: boolean\r\n    setActive: (value: boolean) => void\r\n}\r\n\r\nexport const Modal: React.FC<ModalPropsType> = ({active, setActive, children}) => {\r\n    return <div className={active ? `${classes.modal} ${classes.active}` : classes.modal} onClick={() => setActive(false)}>\r\n        <div\r\n            className={active ? `${classes.modalContent} ${classes.modalContentActive}` : classes.modalContent}\r\n            onClick={e => e.stopPropagation()}\r\n        >\r\n            {children}\r\n        </div>\r\n    </div>\r\n}","import React, {useState} from \"react\";\r\nimport classes from \"./QuestionModal.module.scss\";\r\nimport {Button} from \"../../Button/Button\";\r\nimport {Modal} from \"../Modal\";\r\n\r\ntype QuestionModalPropsType = {\r\n    text: string\r\n    setAnswerY: (value: boolean) => void\r\n    setAnswerN: (value: boolean) => void\r\n    active: boolean\r\n    setActive: (value: boolean) => void\r\n}\r\n\r\nexport const QuestionModal: React.FC<QuestionModalPropsType> = ({text, setAnswerY, setAnswerN, active, setActive}) => {\r\n    const onYesClickHandler = () => {\r\n        setAnswerY(true)\r\n        setActive(false)\r\n    }\r\n    const onNoClickHandler = () => {\r\n        setAnswerN(false)\r\n        setActive(false)\r\n    }\r\n\r\n    return <div className={classes.questionModal}>\r\n        <Modal active={active} setActive={setActive}>\r\n            {text}\r\n            <Button btnName={\"Yes\"} onClick={onYesClickHandler} style={{right: \"10px\"}}/>\r\n            <Button btnName={\"No\"} onClick={onNoClickHandler} style={{left: \"10px\"}}/>\r\n        </Modal>\r\n    </div>\r\n}\r\n","import React from \"react\";\r\nimport {QuestionModal} from \"./QuestionModal\";\r\n\r\ntype QuestionModalContainerPropsType = {\r\n    text: string\r\n    activate: boolean\r\n    setActivate: (value: boolean) => void\r\n    setAnswerY: (value: boolean) => void\r\n    setAnswerN: (value: boolean) => void\r\n}\r\n\r\nexport const QuestionModalContainer: React.FC<QuestionModalContainerPropsType> = ({text, setAnswerY, setAnswerN, activate, setActivate}) => {\r\n    return <>\r\n        <QuestionModal\r\n            text={text}\r\n            setAnswerY={setAnswerY}\r\n            setAnswerN={setAnswerN}\r\n            active={activate}\r\n            setActive={setActivate}\r\n        />\r\n    </>\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./OneInputModal.module.scss\";\r\nimport {Modal} from \"../Modal\";\r\nimport {Button} from \"../../Button/Button\";\r\nimport {useFormik} from \"formik\";\r\n\r\ntype InputModalType = {\r\n    placeholder: string\r\n    title: string\r\n    active: boolean\r\n    setActive: (value: boolean) => void\r\n    handleOnSubmit: (itemName: string) => void\r\n}\r\n\r\nexport const OneInputModal: React.FC<InputModalType> = ({title, placeholder, active, setActive, handleOnSubmit}) => {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            itemsName: \"\",\r\n        },\r\n        onSubmit: values => {\r\n            handleOnSubmit(values.itemsName)\r\n            setActive(false)\r\n        }\r\n    })\r\n\r\n    return <Modal active={active} setActive={setActive}>\r\n            <Button\r\n                btnName={\"X\"}\r\n                onClick={() => setActive(false)}\r\n                style={{position: \"absolute\",\r\n                    width: \"30px\",\r\n                    height: \"30px\",\r\n                    padding: \"5px 5px\",\r\n                    right: \"10px\",\r\n                    top: \"10px\"\r\n                }}\r\n            />\r\n            <form onSubmit={formik.handleSubmit} className={classes.inputModal}>\r\n                <h3>{title}</h3>\r\n                <textarea placeholder={placeholder} {...formik.getFieldProps(\"itemsName\")}/>\r\n                <div>\r\n                    <Button\r\n                        btnName={\"Save\"}\r\n                        btnType={\"green\"}\r\n                        type={\"submit\"}\r\n                    />\r\n                    <Button\r\n                        btnName={\"Reset\"}\r\n                        style={{marginLeft: \"10px\"}}\r\n                        onClick={() => formik.resetForm()}\r\n                    />\r\n                </div>\r\n            </form>\r\n        </Modal>\r\n}\r\n","import removeSVG from \"./Trash-Outline.svg\";\r\nimport React, {ButtonHTMLAttributes} from \"react\";\r\nimport classes from \"./RemoveBTN.module.scss\";\r\n\r\ninterface PropsType extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n    btnName?: string\r\n}\r\n\r\nconst RemoveBTN: React.FC<PropsType> = (props) => {\r\n    return <button className={classes.btn_remove} {...props}>\r\n        <img src={removeSVG} alt=\"\"/>\r\n    </button>;\r\n}\r\n\r\nexport default RemoveBTN\r\n","import openSVG from \"./Folder-Outline.svg\";\r\nimport React, {ButtonHTMLAttributes} from \"react\";\r\nimport classes from \"./OpenBTN.module.scss\";\r\n\r\ninterface PropsType extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n    btnName?: string\r\n}\r\n\r\nconst OpenBTN: React.FC<PropsType> = (props) => {\r\n    return <button className={classes.btn_open} {...props}>\r\n        <img src={openSVG} alt=\"\"/>\r\n    </button>;\r\n}\r\n\r\nexport default OpenBTN\r\n","import trainSVG from \"./Fitness_Fill.svg\";\r\nimport React, {ButtonHTMLAttributes} from \"react\";\r\nimport classes from \"./TrainBTN.module.scss\";\r\n\r\ninterface PropsType extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n    btnName?: string\r\n}\r\n\r\nconst TrainBTN: React.FC<PropsType> = (props) => {\r\n    return <button className={classes.btn_train} {...props}>\r\n        <img src={trainSVG} alt=\"\"/>\r\n    </button>;\r\n}\r\n\r\nexport default TrainBTN\r\n","import classes from './Packs.module.scss';\r\nimport React, {useCallback, useMemo, useState} from 'react';\r\nimport {CardPackType} from \"../../../n1-main/m3-dal/packs-api\";\r\nimport Table, {ITableModel} from '../../../n1-main/m1-ui/common/Table/Table';\r\nimport {StatusType} from \"../../../n1-main/m2-bll/reducers/app-reducer\";\r\nimport EditableTableCell from '../../../n1-main/m1-ui/common/Table/EditableTableCell/EditableTableCell';\r\nimport {Search} from \"../../../n1-main/m1-ui/common/Search/Search\";\r\nimport { TableButton } from '../../../n1-main/m1-ui/common/Table/TableButton/TableButton';\r\nimport {SearchParamsType} from \"../../../n1-main/m2-bll/reducers/packs-reducer\";\r\nimport {Paginator} from \"../../../n1-main/m1-ui/common/Paginator/Paginator\";\r\nimport {ColumnSorting} from \"../../../n1-main/m1-ui/common/ColumnSorting/ColumnSorting\";\r\nimport {QuestionModalContainer} from \"../../../n1-main/m1-ui/common/ModalWindows/QuestionModal/QuestionModalContainer\";\r\nimport { OneInputModal } from '../../../n1-main/m1-ui/common/ModalWindows/OneInputModal/OneInputModal';\r\nimport moment from \"moment\";\r\nimport RemoveBTN from \"../../../n1-main/m1-ui/common/Table/RemoveBTN/RemoveBTN\";\r\nimport OpenBTN from \"../../../n1-main/m1-ui/common/Table/OpenBTN/OpenBTN\";\r\nimport TrainBTN from \"../../../n1-main/m1-ui/common/Table/TrainBTN/TrainBTN\";\r\n\r\ntype PropsType = {\r\n    packs: Array<CardPackType>\r\n    userId: string | undefined\r\n    page: number\r\n    pageCount: number\r\n    min: number | undefined\r\n    max: number | undefined\r\n    cardPacksTotalCount: number\r\n    searchParams: SearchParamsType\r\n    deletePack: (id: string) => void\r\n    createPack: (name: string) => void\r\n    updatePack: (name: string, id: string) => void\r\n    changePage: (page: number) => void\r\n    changePageCount: (page: number) => void\r\n    setSearchParams: (searchName?: string, min?: number, max?: number) => void\r\n    choosePack: (packId: string, cardsOwner: string) => void\r\n    startLearn: (packId: string, cardsOwner: string) => void\r\n    setPacksSortColumn: (sortPacks: string) => void\r\n    pageStatus: StatusType\r\n}\r\n\r\nconst Packs: React.FC<PropsType> = React.memo((props) => {\r\n    let {packs, userId, page, setPacksSortColumn,\r\n        pageCount, cardPacksTotalCount, createPack,\r\n        deletePack, updatePack, changePage, choosePack,\r\n        changePageCount, setSearchParams, pageStatus,\r\n        min, max, searchParams: {packName}, startLearn\r\n    } = props\r\n    // console.log(\"packs\")\r\n\r\n    const sortCardsCount = useCallback((sort: number)=>setPacksSortColumn(sort+\"cardsCount\"),[])\r\n    const [showDeletePackModal, setShowDeletePackModal] = useState(false)\r\n    const [showCreatePackModal, setShowCreatePackModal] = useState(false)\r\n\r\n    const testModel: ITableModel[] = useMemo(() => ([\r\n        {\r\n            title: (i: number) => (<th style={{width: \"30%\", paddingLeft: \"20px\"}} key={i}>\r\n                <div>Name</div>\r\n            </th>),\r\n            render: (d: CardPackType, i: number) => (\r\n                <td style={{width: \"30%\", paddingLeft: \"20px\"}} key={i}>\r\n                    {\r\n                        userId === d.user_id\r\n                            ? <EditableTableCell text={d.name} changeText={(text) => updatePack(text, d._id)}/>\r\n                            : <span>{d.name}</span>\r\n                    }\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (<th style={{width: \"15%\"}} key={i}>\r\n                <div>Added</div>\r\n            </th>),\r\n            render: (d: CardPackType, i: number) => {\r\n\r\n                return <td style={{width: \"15%\"}} key={i}>{moment(d.created).format('Do MMM YY')}</td>\r\n            }\r\n\r\n        },\r\n        {\r\n            title: (i: number) => (<th style={{width: \"10%\", display: \"flex\", alignItems: \"center\"}} key={i}>\r\n                <div>Cards count</div>\r\n                <ColumnSorting onClick={sortCardsCount} pageStatus={pageStatus}/>\r\n            </th>),\r\n            render: (d: CardPackType, i: number) => (\r\n                <td style={{width: \"10%\"}} key={i}>{d.cardsCount}</td>)\r\n        },\r\n        {\r\n            title: (i: number) => (<th style={{width: \"25%\"}} key={i}>Owner</th>),\r\n            render: (d: CardPackType, i: number) => (\r\n                <td style={{width: \"25%\"}} key={i}>{d.user_name}</td>)\r\n        },\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"15%\", paddingRight: \"20px\", textAlign: \"right\"}} key={i}>\r\n                    <TableButton btnName={\"+\"} btnType={\"green\"} onClick={() => setShowCreatePackModal(true)}\r\n                                 disabled={pageStatus === \"loading\"}/>\r\n                </th>\r\n            ),\r\n            render: (d: CardPackType, i: number) => {\r\n                return <td style={{width: \"15%\", textAlign: \"right\", minHeight: \"100%\", display: \"flex\"}} key={i}>\r\n                    <OpenBTN btnName={\"\"}  onClick={() => choosePack(d._id, d.user_id)}\r\n                                 disabled={pageStatus === \"loading\"}/>\r\n                    <TrainBTN btnName={\"\"}  onClick={() => startLearn(d._id, d.user_id)}\r\n                                 disabled={pageStatus === \"loading\" || d.cardsCount === 0}/>\r\n                    <RemoveBTN btnName={\"\"}\r\n                               onClick={() => deletePack(d._id)}\r\n                               disabled={userId !== d.user_id || pageStatus === \"loading\"}/>\r\n                    <QuestionModalContainer text={\"Delete this pack?\"}\r\n                                            activate={showDeletePackModal}\r\n                                            setActivate={setShowDeletePackModal}\r\n                                            setAnswerY={() => deletePack(d._id)}\r\n                                            setAnswerN={() => {}} />\r\n                </td>\r\n            }\r\n        },\r\n\r\n    ]), [pageStatus, showDeletePackModal, showCreatePackModal]);\r\n\r\n    return (\r\n        <div className={classes.packs}>\r\n            <div className={classes.packs__container}>\r\n\r\n                <div className={classes.packs__title}>\r\n                    <h3>Packs</h3>\r\n                </div>\r\n                <div className={classes.packs__body}>\r\n                    <Search name={packName}\r\n                            label={\"Search\"}\r\n                            minValue={min?min:0}\r\n                            maxValue={max?max:0}\r\n                            stepValue={1}\r\n                            pageStatus={pageStatus}\r\n                            setSearchParams={setSearchParams}/>\r\n                    <Table data={packs}\r\n                           model={testModel}\r\n                           pageStatus={pageStatus}/>\r\n                    <Paginator currentPage={page}\r\n                               itemsTotalCount={cardPacksTotalCount}\r\n                               pageCount={pageCount}\r\n                               changePage={changePage}\r\n                               changePageCount={changePageCount}\r\n                               pageStatus={pageStatus}\r\n                               itemsName={\"packs\"} />\r\n                </div>\r\n            </div>\r\n            <OneInputModal title={\"Create pack\"}\r\n                                    placeholder={\"please type a pack name\"}\r\n                                    active={showCreatePackModal}\r\n                                    setActive={setShowCreatePackModal}\r\n                                    handleOnSubmit={createPack}\r\n                                    />\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default Packs;\r\n","import axios from \"axios\"\r\n\r\nconst BASE_URL = \"https://neko-back.herokuapp.com/2.0\"\r\n// const BASE_URL = \"http://localhost:7542/2.0\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: BASE_URL,\r\n    withCredentials: true,\r\n})\r\n\r\nexport const packsApi = {\r\n    getPacks(params: QueryParamsPacksType) {\r\n        return instance.get<ResponsePacksType>(\"/cards/pack\", {params})\r\n    },\r\n    createPack(cardsPack: CreateCardPackType) {\r\n        return instance.post<{ newCardsPack: CardPackType }>(\"/cards/pack\", {cardsPack})\r\n    },\r\n    deletePack(id: string) {\r\n        return instance.delete<{ deletedCardsPack: CardPackType }>(\"cards/pack\", {params: {id}})\r\n    },\r\n    updatePack(cardsPack: {name: string, _id: string}) {\r\n        return instance.put<{ updatedCardsPack: CardPackType }>(\"/cards/pack\", {cardsPack})\r\n    }\r\n}\r\n\r\ntype QueryParamsPacksType = {\r\n    packName?: string\r\n    min?: number\r\n    max?: number\r\n    sortPacks?: string\r\n    page?: number\r\n    pageCount?: number\r\n    user_id?: string\r\n}\r\n\r\ntype ResponsePacksType = {\r\n    cardPacks: Array<CardPackType>\r\n    cardPacksTotalCount: number // количество колод\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number // выбранная страница\r\n    pageCount: number // количество элементов на странице\r\n\r\n}\r\nexport type CardPackType = {\r\n    _id: string\r\n    user_id: string\r\n    name: string\r\n    path: string // папка\r\n    grade: number // средняя оценка карточек\r\n    shots: number // количество попыток\r\n    rating: number // лайки\r\n    type: \"pack\" | \"folder\" // ещё будет \"folder\" (папка)\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n    cardsCount: number\r\n    more_id: string\r\n    private: boolean\r\n    user_name: string\r\n}\r\n\r\ntype CreateCardPackType = {\r\n    name?: string // если не отправить будет таким\r\n    path?: string // если не отправить будет такой\r\n    grade?: number // не обязателен\r\n    shots?: number // не обязателен\r\n    rating?: number // не обязателен\r\n    deckCover?: string // не обязателен\r\n    private?: boolean // если не отправить будет такой\r\n    type?: \"pack\" | \"folder\" // если не отправить будет таким\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {RootStateType} from \"../store\";\r\nimport { StatusType } from \"./app-reducer\";\r\nimport {cardsApi, CardType, CreateCardType, GradeType, UpdateCardType} from \"../../m3-dal/cards-api\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\n\r\nenum ACTION_TYPES {\r\n    CHANGE_PAGE = \"cards/CHANGE_PAGE\",\r\n    CHANGE_PAGE_COUNT = \"cards/CHANGE_PAGE_COUNT\",\r\n    SET_CARDS = \"cards/SET_CARDS\",\r\n    SET_SEARCH_NAME = \"cards/SET_SEARCH_NAME\",\r\n    SET_SEARCH_PARAMS = \"cards/SET_SEARCH_PARAMS\",\r\n    SET_IS_LOADING = \"cards/SET_IS_LOADING\",\r\n    SET_PACK_ID = \"cards/SET_PACK_ID\",\r\n    SET_SORT_COLUMN = \"cards/SET_SORT_COLUMN\",\r\n    SET_CARD_IS_LOADING = \"cards/SET_CARD_IS_LOADING\",\r\n}\r\n\r\n\r\nconst initialState = {\r\n    cardsPack_id: \"\" as string,\r\n    cardsOwner: \"\",\r\n    cards: [] as Array<CardType>,\r\n    cardsTotalCount: 0,\r\n    page: 1,\r\n    pageCount: 10,\r\n    minGrade: undefined as undefined | number,\r\n    maxGrade: undefined as undefined | number,\r\n    pageStatus: \"idle\" as StatusType,\r\n    cardIsLoading: false,\r\n    searchParams: {\r\n        cardQuestion: \"\" as undefined | string,\r\n        cardAnswer: \"\" as undefined | string,\r\n        sortCards: \"\" as undefined | string,\r\n        min: undefined as undefined | number,\r\n        max: undefined as undefined | number,\r\n    }\r\n}\r\n\r\nexport const cardsReducer = (state: CardsStateType = initialState, action: ActionsType): CardsStateType => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.CHANGE_PAGE:\r\n        case ACTION_TYPES.CHANGE_PAGE_COUNT:\r\n        case ACTION_TYPES.SET_IS_LOADING:\r\n        case ACTION_TYPES.SET_PACK_ID:\r\n        case ACTION_TYPES.SET_CARDS:\r\n        case ACTION_TYPES.SET_CARD_IS_LOADING:\r\n            return {\r\n                ...state, ...action.payload,\r\n            }\r\n        case ACTION_TYPES.SET_SEARCH_NAME:\r\n            return {\r\n                ...state, searchParams: {...state.searchParams, cardQuestion: action.payload.question}\r\n            }\r\n        case ACTION_TYPES.SET_SEARCH_PARAMS:\r\n        case ACTION_TYPES.SET_SORT_COLUMN:\r\n            return {\r\n                ...state, searchParams: {...state.searchParams, ...action.payload}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n// actions\r\n\r\nexport const changeCardsPageAC = (page: number) => {\r\n    return {type: ACTION_TYPES.CHANGE_PAGE, payload: {page}} as const\r\n}\r\nexport const changeCardsPageCountAC = (pageCount: number) => {\r\n    return {type: ACTION_TYPES.CHANGE_PAGE_COUNT, payload: {pageCount}} as const\r\n}\r\nconst setCardsAC = (cards: Array<CardType>, cardsTotalCount: number, minGrade: number, maxGrade: number, pageStatus: StatusType) => {\r\n    return {type: ACTION_TYPES.SET_CARDS, payload: {cards, cardsTotalCount, minGrade, maxGrade, pageStatus}} as const\r\n}\r\nexport const setCardsSearchQuestionAC = (question: string) => {\r\n    return {type: ACTION_TYPES.SET_SEARCH_NAME, payload: {question}} as const\r\n}\r\nexport const setCardsSearchParamsAC = (cardQuestion?: string, min?: number, max?: number) => {\r\n    return {type: ACTION_TYPES.SET_SEARCH_PARAMS, payload: {cardQuestion, min, max}} as const\r\n}\r\nexport const setCardsPageStatus = (pageStatus: StatusType) => {\r\n    return {type: ACTION_TYPES.SET_IS_LOADING, payload: {pageStatus}} as const\r\n}\r\nexport const setPackAC = (cardsPack_id: string, cardsOwner: string) => {\r\n    return {type: ACTION_TYPES.SET_PACK_ID, payload: {cardsPack_id, cardsOwner}} as const\r\n}\r\nexport const setCardsSortColumnParamsAC = (sortCards: string) => {\r\n    return {type: ACTION_TYPES.SET_SORT_COLUMN, payload: {sortCards}} as const\r\n}\r\nexport const setCardIsLoadingAC = (cardIsLoading: boolean) => {\r\n    return {type: ACTION_TYPES.SET_CARD_IS_LOADING, payload: {cardIsLoading}} as const\r\n}\r\n\r\n// thunks\r\n\r\nexport const getCardsTC = (selectedPage?: number, pageCountLearn?: number) => async (dispatch: Dispatch, getState: () => RootStateType) => {\r\n    const {cardsPack_id, page, pageCount, searchParams: {cardQuestion, min, max, sortCards}} = getState().cards\r\n    dispatch(setCardsPageStatus(\"loading\"))\r\n    try {\r\n        const response = await cardsApi.getPack({\r\n            cardsPack_id,\r\n            page: selectedPage || page,\r\n            pageCount: pageCountLearn || pageCount,\r\n            cardQuestion,\r\n            min,\r\n            max,\r\n            sortCards\r\n        })\r\n        dispatch(setCardsAC(response.data.cards,\r\n            response.data.cardsTotalCount,\r\n            response.data.minGrade,\r\n            response.data.maxGrade,\r\n            \"succeeded\"))\r\n        selectedPage && dispatch(changeCardsPageAC(selectedPage))\r\n        // console.log(getState().cards)\r\n    } catch (e) {\r\n        // console.log(\"get packs tc\")\r\n        // alert(e.response.data.error)\r\n        dispatch(setCardsPageStatus(\"failed\"))\r\n    } finally {\r\n\r\n    }\r\n}\r\n\r\nexport const deleteCardTC = (cardId: string) =>\r\n    async (dispatch: ThunkDispatch<RootStateType, {}, ActionsType>) => {\r\n    dispatch(setCardsPageStatus(\"loading\"))\r\n    try {\r\n        const response = await cardsApi.deleteCard(cardId)\r\n        dispatch(getCardsTC())\r\n    } catch (e) {\r\n        // alert(e.response.data.error)\r\n        dispatch(setCardsPageStatus(\"failed\"))\r\n    }\r\n}\r\nexport const createCardTC = (card: CreateCardType) =>\r\n    async (dispatch: ThunkDispatch<RootStateType, {}, ActionsType>, getState: () => RootStateType) => {\r\n    dispatch(setCardsPageStatus(\"loading\"))\r\n    let {cardsPack_id} = getState().cards\r\n    try {\r\n        const response = await cardsApi.createCard({...card, cardsPack_id})\r\n        dispatch(getCardsTC(1))\r\n    } catch (e) {\r\n        // console.log(\"create tc\")\r\n        // alert(e.response.data.error)\r\n        dispatch(setCardsPageStatus(\"failed\"))\r\n    }\r\n}\r\n//under construction\r\nexport const updateCardTC = (card: UpdateCardType) =>\r\n    async (dispatch: ThunkDispatch<RootStateType, {}, ActionsType>) => {\r\n    dispatch(setCardsPageStatus(\"loading\"))\r\n    try {\r\n        const response = await cardsApi.updateCard(card)\r\n        dispatch(getCardsTC(1))\r\n    } catch (e) {\r\n        // alert(e.response.data.error)\r\n        dispatch(setCardsPageStatus(\"failed\"))\r\n    }\r\n}\r\n\r\nexport const updateGradeTC = (card: GradeType) =>\r\n    async (dispatch: ThunkDispatch<RootStateType, {}, ActionsType>) => {\r\n        dispatch(setCardIsLoadingAC(true))\r\n        try {\r\n            const response = await cardsApi.gradeCard(card)\r\n            await dispatch(getCardsTC(1, 100))\r\n            dispatch(setCardIsLoadingAC(false))\r\n        } catch (e) {\r\n            // alert(e.response.data.error)\r\n            dispatch(setCardsPageStatus(\"failed\"))\r\n        }\r\n    }\r\n\r\nexport type CardsStateType = typeof initialState\r\nexport type CardsSearchParamsType = typeof initialState.searchParams\r\n\r\n\r\ntype ActionsType = ReturnType<typeof changeCardsPageAC>\r\n    | ReturnType<typeof changeCardsPageCountAC>\r\n    | ReturnType<typeof setCardsAC>\r\n    | ReturnType<typeof setCardsSearchQuestionAC>\r\n    | ReturnType<typeof setCardsSearchParamsAC>\r\n    | ReturnType<typeof setCardsPageStatus>\r\n    | ReturnType<typeof setPackAC>\r\n    | ReturnType<typeof setCardsSortColumnParamsAC>\r\n    | ReturnType<typeof setCardIsLoadingAC>\r\n","import axios from \"axios\"\r\n\r\nconst BASE_URL = \"https://neko-back.herokuapp.com/2.0\"\r\n// const BASE_URL = \"http://localhost:7542/2.0\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: BASE_URL,\r\n    withCredentials: true,\r\n})\r\n\r\nexport const cardsApi = {\r\n    getPack(params: QueryParamsCardsType) {\r\n        return instance.get<ResponsePacksType>(\"/cards/card\", {params})\r\n    },\r\n    createCard(card: CreateCardType) {\r\n        return instance.post<{ newCard: CardType }>(\"/cards/card\", {card})\r\n    },\r\n    deleteCard(id: string) {\r\n        return instance.delete<{ deletedCard: CardType }>(\"/cards/card\", {params: {id}})\r\n    },\r\n    updateCard(card: UpdateCardType) {\r\n        return instance.put<{ updatedCard: CardType }>(\"/cards/card\", {card})\r\n    },\r\n    gradeCard(card: GradeType) {\r\n        return instance.put<{ updatedGrade: UpdateGrade }>(\"/cards/grade\", card)\r\n    }\r\n}\r\n\r\nexport type GradeType = {\r\n    grade: number\r\n    card_id: string\r\n}\r\n\r\nexport type UpdateGrade = {\r\n    _id: string\r\n    cardsPack_id: string\r\n    card_id: string\r\n    user_id: string\r\n    grade: number\r\n    shot: number\r\n}\r\ntype QueryParamsCardsType = {\r\n    cardsPack_id: string\r\n    cardAnswer?: string\r\n    cardQuestion?: string\r\n    sortCards?: string\r\n    min?: number\r\n    max?: number\r\n    page?: number\r\n    pageCount?: number\r\n    user_id?: string\r\n\r\n}\r\n\r\ntype ResponsePacksType = {\r\n    \"cards\": CardType[],\r\n    \"cardsTotalCount\": number,\r\n    \"minGrade\": number,\r\n    \"maxGrade\": number,\r\n    page: number // выбранная страница\r\n    pageCount: number // количество элементов на странице\r\n    \"token\": string,\r\n    \"tokenDeathTime\": number\r\n\r\n}\r\nexport type CardType = {\r\n    cardsPack_id: string,\r\n    _id: string\r\n    user_id: string\r\n    more_id: string\r\n    question: string,\r\n    questionImg: \"\"\r\n    questionVideo: \"\"\r\n    answer: string,\r\n    answerImg: \"\"\r\n    answerVideo: \"\"\r\n    grade: number // средняя оценка карточек\r\n    shots: number // количество попыток\r\n    rating: number // лайки\r\n    created: string\r\n    updated: string\r\n    type: \"card\"\r\n    __v: number\r\n    comments: string,\r\n}\r\n\r\nexport type CreateCardType = {\r\n    cardsPack_id?: string\r\n    question?: string // если не отправить будет таким\r\n    answer?: string // если не отправить будет таким\r\n    grade?: number // 0..5, не обязателен\r\n    shots?: number // не обязателен\r\n    rating?: number // не обязателен\r\n    answerImg?: string // не обязателен\r\n    questionImg?: string // не обязателен\r\n    questionVideo?: string // не обязателен\r\n    answerVideo?: string // не обязателен\r\n    type?: \"card\"\r\n}\r\nexport type UpdateCardType = {\r\n    question?: string,\r\n    answer?: string,\r\n    _id: string\r\n}\r\n","import React, {useCallback, useEffect} from 'react';\r\nimport Packs from \"./Packs\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../../../n1-main/m2-bll/store\";\r\nimport {CardPackType} from \"../../../n1-main/m3-dal/packs-api\";\r\nimport {\r\n    changePageAC,\r\n    changePageCountAC,\r\n    createPackTC,\r\n    deletePackTC,\r\n    getPacksTC, PacksStateType, SearchParamsType, setPacksSortColumnAC, setSearchParamsAC,\r\n    updatePackTC\r\n} from \"../../../n1-main/m2-bll/reducers/packs-reducer\";\r\nimport {Preloader} from \"../../../n1-main/m1-ui/common/Preloader/Preloader\";\r\nimport {StatusType} from \"../../../n1-main/m2-bll/reducers/app-reducer\";\r\nimport {setPackAC} from \"../../../n1-main/m2-bll/reducers/cards-reducer\";\r\nimport {useHistory, useParams} from 'react-router-dom';\r\n\r\n\r\nconst PacksContainer = React.memo(() => {\r\n\r\n    // console.log(\"packs container\")\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const {packs, min, max, page, pageCount, cardPacksTotalCount, pageStatus, searchParams} =\r\n        useSelector<RootStateType, PacksStateType>(state => state.packs)\r\n    const userId = useSelector<RootStateType, string | undefined>(state => state.profile.userData?._id)\r\n\r\n\r\n    const deletePackHandler = useCallback((id: string) => {\r\n        dispatch(deletePackTC(id))\r\n    }, [])\r\n    const createPackHandler = useCallback((name: string) => {\r\n        dispatch(createPackTC(name))\r\n    }, [])\r\n    const updatePackHandler = useCallback((name: string, id: string) => {\r\n        dispatch(updatePackTC(name, id))\r\n    }, [])\r\n    const changePageHandler = useCallback((page: number) => {\r\n        dispatch(changePageAC(page))\r\n    }, [])\r\n    const changePageCountHandler = useCallback((pageCount: number) => {\r\n        dispatch(changePageCountAC(pageCount))\r\n    }, [])\r\n    const setSearchParamsHandler = useCallback((searchName?: string, min?: number, max?: number) => {\r\n        dispatch(setSearchParamsAC(searchName, min, max))\r\n    }, [])\r\n    const setPacksSortColumnHandler = useCallback((sortPacks: string) => {\r\n        dispatch(setPacksSortColumnAC(sortPacks))\r\n    }, [])\r\n    const choosePackHandler = useCallback((packId: string, cardsOwner: string) => {\r\n        dispatch(setPackAC(packId, cardsOwner))\r\n        history.push(`/cards/${packId}`)\r\n    }, [])\r\n    const startLearnHandler = useCallback((packId: string, cardsOwner: string) => {\r\n        dispatch(setPackAC(packId, cardsOwner))\r\n        history.push(`/learn/${packId}`)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        dispatch(getPacksTC())\r\n    }, [page, pageCount, searchParams])\r\n\r\n    if (!packs || pageStatus === \"idle\") {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <Packs packs={packs}\r\n               userId={userId}\r\n               page={page}\r\n               min={min}\r\n               max={max}\r\n               pageCount={pageCount}\r\n               searchParams={searchParams}\r\n               cardPacksTotalCount={cardPacksTotalCount}\r\n               createPack={createPackHandler}\r\n               deletePack={deletePackHandler}\r\n               updatePack={updatePackHandler}\r\n               changePage={changePageHandler}\r\n               choosePack={choosePackHandler}\r\n               startLearn={startLearnHandler}\r\n               setPacksSortColumn={setPacksSortColumnHandler}\r\n               changePageCount={changePageCountHandler}\r\n               setSearchParams={setSearchParamsHandler}\r\n               pageStatus={pageStatus}\r\n        />\r\n    );\r\n})\r\n\r\nexport default PacksContainer;\r\n","import React from \"react\";\r\nimport classes from \"./ThreeInputModal.module.scss\";\r\nimport {Modal} from \"../Modal\";\r\nimport {Button} from \"../../Button/Button\";\r\nimport {useFormik} from \"formik\";\r\n\r\ntype InputModalType = {\r\n    title: string\r\n    firstInputValue?: string\r\n    secondInputValue?: string\r\n    thirdInputValue?: string\r\n    active: boolean\r\n    setActive: (value: boolean) => void\r\n    handleOnSubmit: (question: string, answer: string, comment: string) => void\r\n}\r\n\r\nexport const ThreeInputModal: React.FC<InputModalType> = ({title, firstInputValue,\r\n                                                              secondInputValue, thirdInputValue,\r\n                                                              active, setActive, handleOnSubmit}) => {\r\n\r\n    console.log(firstInputValue, secondInputValue, thirdInputValue)\r\n    \r\n    const formik = useFormik({\r\n        initialValues: {\r\n            question: firstInputValue || \"\",\r\n            answer: secondInputValue || \"\",\r\n            comment: thirdInputValue || \"\"\r\n        },\r\n        onSubmit: (values, {resetForm}) => {\r\n            handleOnSubmit(values.question, values.answer, values.comment)\r\n            resetForm()\r\n            setActive(false)\r\n        }\r\n    })\r\n\r\n    return <Modal active={active} setActive={setActive}>\r\n            <Button\r\n                btnName={\"X\"}\r\n                onClick={() => setActive(false)}\r\n                style={{position: \"absolute\",\r\n                    width: \"30px\",\r\n                    height: \"30px\",\r\n                    padding: \"5px 5px\",\r\n                    right: \"10px\",\r\n                    top: \"10px\"\r\n                }}\r\n            />\r\n            <form onSubmit={formik.handleSubmit} className={classes.inputModal}>\r\n                <h3>{title}</h3>\r\n                <textarea placeholder={\"question\"} {...formik.getFieldProps(\"question\")} />\r\n                <textarea  placeholder={\"answer\"} {...formik.getFieldProps(\"answer\")} />\r\n                <textarea  placeholder={\"comment\"} {...formik.getFieldProps(\"comment\")} />\r\n                <div>\r\n                    <Button\r\n                        btnName={\"Save\"}\r\n                        btnType={\"green\"}\r\n                        type={\"submit\"}\r\n                    />\r\n                    <Button\r\n                        btnName={\"Reset\"}\r\n                        type={\"reset\"}\r\n                        style={{marginLeft: \"10px\"}}\r\n                        onClick={() => formik.resetForm()}\r\n                    />\r\n                </div>\r\n            </form>\r\n        </Modal>\r\n}\r\n","import editSVG from \"./Pencil-Outline.svg\";\r\nimport React, {ButtonHTMLAttributes} from \"react\";\r\nimport classes from \"./EditBTN.module.scss\";\r\n\r\ninterface PropsType extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n    btnName?: string\r\n}\r\n\r\nconst EditBTN: React.FC<PropsType> = (props) => {\r\n    return <button className={classes.btn_edit} {...props}>\r\n        <img src={editSVG} alt=\"\"/>\r\n    </button>;\r\n}\r\n\r\nexport default EditBTN\r\n","import classes from './Cards.module.scss';\r\nimport React, {useCallback, useMemo, useState} from 'react';\r\nimport Table, {ITableModel} from '../../../n1-main/m1-ui/common/Table/Table';\r\nimport {StatusType} from \"../../../n1-main/m2-bll/reducers/app-reducer\";\r\nimport {Search} from \"../../../n1-main/m1-ui/common/Search/Search\";\r\nimport {CardsSearchParamsType} from '../../../n1-main/m2-bll/reducers/cards-reducer';\r\nimport {CardType} from \"../../../n1-main/m3-dal/cards-api\";\r\nimport {Paginator} from \"../../../n1-main/m1-ui/common/Paginator/Paginator\";\r\nimport {ColumnSorting} from \"../../../n1-main/m1-ui/common/ColumnSorting/ColumnSorting\";\r\nimport {QuestionModalContainer} from \"../../../n1-main/m1-ui/common/ModalWindows/QuestionModal/QuestionModalContainer\";\r\nimport { ThreeInputModal } from '../../../n1-main/m1-ui/common/ModalWindows/ThreeInputModal/ThreeInputModal';\r\nimport moment from \"moment\";\r\nimport RemoveBTN from \"../../../n1-main/m1-ui/common/Table/RemoveBTN/RemoveBTN\";\r\nimport { TableButton } from '../../../n1-main/m1-ui/common/Table/TableButton/TableButton';\r\nimport EditBTN from \"../../../n1-main/m1-ui/common/Table/EditBTN/EditBTN\";\r\n\r\n\r\ntype PropsType = {\r\n    cards: Array<CardType>\r\n    owner: boolean\r\n    page: number\r\n    pageCount: number\r\n    min: number | undefined\r\n    max: number | undefined\r\n    cardsTotalCount: number\r\n    searchParams: CardsSearchParamsType\r\n    deleteCard: (id: string) => void\r\n    createCard: (question: string, answer: string) => void\r\n    updateCard: (cardId: string, question: string, answer: string) => void\r\n    changePage: (page: number) => void\r\n    changePageCount: (page: number) => void\r\n    setSearchParams: (searchName?: string, min?: number, max?: number) => void\r\n    pageStatus: StatusType\r\n    setSortColumn: (sortCards: string) => void\r\n}\r\n\r\nconst Cards: React.FC<PropsType> = React.memo((props) => {\r\n    let {\r\n        cards, page, owner, setSortColumn,\r\n        pageCount, cardsTotalCount,\r\n        createCard, deleteCard, updateCard, changePage,\r\n        changePageCount, setSearchParams, pageStatus,\r\n        min, max, searchParams: {cardQuestion}\r\n    } = props\r\n    // console.log(\"cards\")\r\n    const [showCreateModal, setShowCreateModal] = useState(false)\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false)\r\n    const [showEditModal, setShowEditModal] = useState(false)\r\n    const sortGrade = useCallback((sort: number) => setSortColumn(sort + \"grade\"), [])\r\n\r\n    const testModel: ITableModel[] = useMemo(() => ([\r\n        {\r\n            title: (i: number) => (<th style={{width: \"30%\", paddingLeft: \"20px\"}} key={i}>\r\n                <span>Question</span>\r\n            </th>),\r\n            render: (d: CardType, i: number) => (\r\n                <td style={{width: \"30%\", paddingLeft: \"20px\"}} key={i}>\r\n                    <div>{d.question}</div>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (<th style={{width: \"30%\"}} key={i}>Answer</th>),\r\n            render: (d: CardType, i: number) => (\r\n                <td style={{width: \"30%\"}} key={i}>{d.answer}</td>)\r\n        },\r\n        {\r\n            title: (i: number) => (<th style={{width: \"15%\"}} key={i}>\r\n                <span>Added</span>\r\n            </th>),\r\n            render: (d: CardType, i: number) => {\r\n                return <td style={{width: \"15%\"}} key={i}>{moment(d.created).format('Do MMM YY')}</td>\r\n            }\r\n\r\n        },\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"15%\", display: \"flex\", alignItems: \"center\"}} key={i}>\r\n                    <div>Grade</div>\r\n                    <ColumnSorting onClick={sortGrade} pageStatus={pageStatus}/>\r\n                </th>),\r\n            render: (d: CardType, i: number) => (\r\n                <td style={{width: \"15%\"}} key={i}>{d.grade.toFixed(2)}</td>)\r\n        },\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"10%\", paddingRight: \"20px\", textAlign: \"right\"}} key={i}>\r\n                    <TableButton btnName={\"+\"} btnType={\"green\"} onClick={() => setShowCreateModal(true)}\r\n                                 disabled={!owner || pageStatus === \"loading\"}/>\r\n                </th>\r\n            ),\r\n            render: (d: CardType, i: number) => {\r\n\r\n                return <td style={{width: \"15%\", textAlign: \"right\", minHeight: \"100%\", display: \"flex\"}} key={i}>\r\n                    <EditBTN btnName={\"edit\"} onClick={() => setShowEditModal(true)}\r\n                                 disabled={!owner || pageStatus === \"loading\"}/>\r\n                    <RemoveBTN btnName={\"\"} onClick={() => setShowDeleteModal(true)}\r\n                                 disabled={!owner || pageStatus === \"loading\"}/>\r\n                    <QuestionModalContainer text={\"Delete this card?\"}\r\n                                            activate={showDeleteModal}\r\n                                            setActivate={setShowDeleteModal}\r\n                                            setAnswerY={() => deleteCard(d._id)}\r\n                                            setAnswerN={() => {}}/>\r\n                    <ThreeInputModal title={\"ss\"}\r\n                                     handleOnSubmit={(question, answer, comment) => updateCard(d._id, question, answer)}\r\n                                     setActive={setShowEditModal}\r\n                                     firstInputValue={d.question}\r\n                                     secondInputValue={d.answer}\r\n                                     thirdInputValue={d.comments}\r\n                                     active={showEditModal}/>\r\n                </td>\r\n            }\r\n        },\r\n\r\n    ]), [pageStatus, owner, showDeleteModal, showEditModal]);\r\n\r\n    return (\r\n        <div className={classes.packs}>\r\n            <div className={classes.packs__container}>\r\n\r\n                <div className={classes.packs__title}>\r\n                    <h3>Cards</h3>\r\n                </div>\r\n                <div className={classes.packs__body}>\r\n                    <Search name={cardQuestion}\r\n                            label={\"Search\"}\r\n                            minValue={min ? min : 0}\r\n                            maxValue={max ? max : 0}\r\n                            stepValue={1}\r\n                            pageStatus={pageStatus}\r\n                            setSearchParams={setSearchParams}/>\r\n                    <Table data={cards}\r\n                           model={testModel}\r\n                           pageStatus={pageStatus}/>\r\n                    <Paginator currentPage={page}\r\n                               itemsTotalCount={cardsTotalCount}\r\n                               pageCount={pageCount}\r\n                               changePage={changePage}\r\n                               changePageCount={changePageCount}\r\n                               pageStatus={pageStatus}\r\n                               itemsName={\"cards\"}/>\r\n                </div>\r\n                <ThreeInputModal title={\"Create card\"}\r\n                                          handleOnSubmit={createCard}\r\n                                          setActive={setShowCreateModal}\r\n                                          active={showCreateModal}/>\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default Cards;\r\n","import React, {useCallback, useEffect} from 'react';\r\nimport Cards from \"./Cards\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../../../n1-main/m2-bll/store\";\r\nimport {Preloader} from \"../../../n1-main/m1-ui/common/Preloader/Preloader\";\r\nimport {\r\n    CardsStateType,\r\n    changeCardsPageAC, changeCardsPageCountAC, createCardTC,\r\n    deleteCardTC,\r\n    getCardsTC, setCardsSearchParamsAC, setCardsSortColumnParamsAC, setPackAC, updateCardTC\r\n} from \"../../../n1-main/m2-bll/reducers/cards-reducer\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\n\r\nconst CardsContainer = React.memo(() => {\r\n\r\n    // console.log(\"cards container\")\r\n\r\n    const dispatch = useDispatch()\r\n    const {\r\n        cards, cardsOwner, cardsPack_id, minGrade, maxGrade, page, pageCount, cardsTotalCount, pageStatus, searchParams\r\n        } = useSelector<RootStateType, CardsStateType>(state => state.cards)\r\n    const userId = useSelector<RootStateType, string | undefined>(state => state.profile.userData?._id)\r\n\r\n\r\n    let {packId} = useParams<{packId: string}>()\r\n    if (cardsPack_id !== packId) {\r\n        dispatch(setPackAC(packId, \"\"))\r\n    }\r\n    // console.log(cardsOwner, userId)\r\n    const deleteCardHandler = useCallback((cardId: string) => {\r\n        dispatch(deleteCardTC(cardId))\r\n    }, [])\r\n    const createCardHandler = useCallback((question: string, answer: string) => {\r\n        dispatch(createCardTC({question, answer}))\r\n    }, [])\r\n    const updateCardHandler = useCallback((cardId: string, question: string, answer: string) => {\r\n        dispatch(updateCardTC({question, _id: cardId, answer}))\r\n    }, [])\r\n    const changePageHandler = useCallback((page: number) => {\r\n        dispatch(changeCardsPageAC(page))\r\n    }, [])\r\n    const changePageCountHandler = useCallback((pageCount: number) => {\r\n        dispatch(changeCardsPageCountAC(pageCount))\r\n    }, [])\r\n    const setSearchParamsHandler = useCallback((cardQuestion?: string, min?: number, max?: number) => {\r\n        dispatch(setCardsSearchParamsAC(cardQuestion, min, max))\r\n    }, [])\r\n    const setSortColumnHandler = useCallback((sortCards: string) => {\r\n        dispatch(setCardsSortColumnParamsAC(sortCards))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        dispatch(getCardsTC())\r\n\r\n    }, [page, pageCount, searchParams, cardsPack_id])\r\n\r\n    if (!cardsPack_id || !cards || pageStatus === \"idle\") {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <Cards cards={cards}\r\n               page={page}\r\n               owner={cardsOwner===userId}\r\n               min={minGrade}\r\n               max={maxGrade}\r\n               pageCount={pageCount}\r\n               searchParams={searchParams}\r\n               cardsTotalCount={cardsTotalCount}\r\n               createCard={createCardHandler}\r\n               deleteCard={deleteCardHandler}\r\n               updateCard={updateCardHandler}\r\n               changePage={changePageHandler}\r\n               setSortColumn={setSortColumnHandler}\r\n               changePageCount={changePageCountHandler}\r\n               setSearchParams={setSearchParamsHandler}\r\n               pageStatus={pageStatus}\r\n        />\r\n    );\r\n})\r\n\r\nexport default CardsContainer;\r\n","import React from \"react\";\r\n\r\nimport {CardType} from \"../../../n1-main/m3-dal/cards-api\";\r\nimport {Button} from \"../../../n1-main/m1-ui/common/Button/Button\";\r\nimport classes from \"./Learn.module.scss\";\r\n\r\n\r\n\r\nconst grades = [\"1\", \"2\", \"3\", \"4\", \"5\"];\r\n\r\ntype PropsType = {\r\n    card: CardType\r\n    onNext: () => void\r\n    flipCard: (value: boolean) => void\r\n    gradeCard: (cardId: string, grade: number) => void\r\n    isLoading: boolean\r\n    isChecked: boolean\r\n}\r\n\r\nconst Learn: React.FC<PropsType> = React.memo(({card, onNext, gradeCard, isLoading, isChecked, flipCard}) => {\r\n\r\n    const onGradeButtonHandler = (grade: number) => {\r\n        gradeCard(card._id, grade)\r\n    }\r\n\r\n    const onNextHandler = () => {\r\n        onNext()\r\n    }\r\n\r\n    return (\r\n        <div className={classes.learn}>\r\n            <div className={classes.learn__container}>\r\n                <div className={classes.card}>\r\n                    <div style={isChecked ? {transform: \"rotateX(180deg)\"} : {}} className={classes.card__inner}>\r\n                        <div className={classes.card__front}\r\n                             onClick={() => flipCard(true)}>\r\n                            <div className={classes.card__text}>\r\n                                <p>{card.question}</p>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className={classes.card__back}>\r\n                            <div className={classes.card__text}>\r\n                                <p>{card.answer}</p>\r\n                            </div>\r\n\r\n                            <div className={classes.card__back_bottom}>\r\n                                {grades.map((g, i) => (\r\n                                    <Button onClick={() => onGradeButtonHandler(i+1)}\r\n                                            key={'grade-' + i}\r\n                                            disabled={isLoading}\r\n                                            btnName={g}/>\r\n                                ))}\r\n\r\n                                <div className={classes.card__next_btn} onClick={onNextHandler}>next</div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n);\r\n})\r\n\r\nexport default Learn;\r\n","import React, {useCallback, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {CardsStateType, getCardsTC, setPackAC, updateGradeTC} from \"../../../n1-main/m2-bll/reducers/cards-reducer\";\r\nimport {RootStateType} from \"../../../n1-main/m2-bll/store\";\r\nimport {CardType} from \"../../../n1-main/m3-dal/cards-api\";\r\nimport Learn from './Learn';\r\n\r\n\r\nconst getCard = (cards: CardType[]) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce((acc: { sum: number, id: number}, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n        }\r\n        , {sum: 0, id: -1});\r\n    // console.log('test: ', sum, rand, res)\r\n\r\n    return cards[res.id + 1];\r\n}\r\n\r\n\r\nconst LearnContainer: React.FC = React.memo(() => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {cards, cardsPack_id, cardIsLoading} = useSelector<RootStateType, CardsStateType>(state => state.cards)\r\n\r\n    let {packId} = useParams<{packId: string}>()\r\n    if (cardsPack_id !== packId) {\r\n        dispatch(setPackAC(packId, \"\"))\r\n    }\r\n\r\n    const [card, setCard] = useState<CardType>({} as CardType);\r\n    const [first, setFirst] = useState<boolean>(true);\r\n    const [isChecked, setIsChecked] = useState<boolean>(false);\r\n\r\n    const onNext = useCallback(() => {\r\n        setIsChecked(false);\r\n        if (cards.length > 0) {\r\n            setTimeout(setCard, 300, getCard(cards))\r\n        }\r\n    }, [cards])\r\n\r\n    const flipCardHandler = useCallback((value: boolean) => {\r\n        setIsChecked(true);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (first) {\r\n            dispatch(getCardsTC(1, 100))\r\n            setFirst(false);\r\n        }\r\n        if (cards.length > 0) setTimeout(setCard, 300, getCard(cards));\r\n\r\n    }, [cardsPack_id, cards, first])\r\n\r\n    const gradeCardHandler = useCallback(async (cardId: string, grade: number) => {\r\n        await dispatch(updateGradeTC({card_id: cardId, grade}))\r\n        setIsChecked(false)\r\n    }, [cards])\r\n\r\n    return (\r\n        <Learn card={card}\r\n               onNext={onNext}\r\n               gradeCard={gradeCardHandler}\r\n               isLoading={cardIsLoading}\r\n               isChecked={isChecked}\r\n               flipCard={flipCardHandler}\r\n        />\r\n    );\r\n});\r\n\r\nexport default LearnContainer;\r\n","import React from \"react\";\r\nimport classes from \"./PageNotFound.module.css\";\r\nimport {Button} from \"../Button/Button\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../../../m2-bll/store\";\r\n\r\nexport const PageNotFound = () => {\r\n\r\n    const isLoggedSuccess = useSelector<RootStateType, boolean>(state => state.login.isLoggedSuccess)\r\n    const history = useHistory()\r\n\r\n    const buttonHandler = () => {\r\n        if (isLoggedSuccess) {\r\n            history.push('/profile')\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrap}>\r\n            <h2 className={classes.title}>404</h2>\r\n            <h3 className={classes.subtitle}>Sorry, the page not found...</h3>\r\n            <Button btnName={'Go back'} btnType={'green'} onClick={buttonHandler}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport ProfileContainer from \"../../../n2-features/f1-auth/a5-profile/ProfileContainer\";\r\nimport LoginContainer from \"../../../n2-features/f1-auth/a1-login/LoginContainer\";\r\nimport RegisterContainer from \"../../../n2-features/f1-auth/a2-register/RegisterContainer\";\r\nimport RestoreContainer from \"../../../n2-features/f1-auth/a3-restore/RestoreContainer\";\r\nimport NewPasswordContainer from \"../../../n2-features/f1-auth/a4-new-password/NewPasswordContainer\";\r\nimport AuthRedirect from \"../common/AuthRedirect/AuthRedirect\";\r\nimport PacksContainer from \"../../../n2-features/f2-cards/c1-packs/PacksContainer\";\r\nimport CardsContainer from \"../../../n2-features/f2-cards/c2-cards/CardsContainer\";\r\nimport LearnContainer from \"../../../n2-features/f3-learn/l1-learn/LearnContainer\";\r\nimport {PageNotFound} from \"../common/Page404/PageNotFound\";\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path={\"/profile\"} render={() => <AuthRedirect><ProfileContainer/></AuthRedirect>}/>\r\n            <Route path={\"/login\"} render={() => <LoginContainer/>}/>\r\n            <Route path={\"/register\"} render={() => <RegisterContainer/>}/>\r\n            <Route path={\"/restore\"} render={() => <RestoreContainer/>}/>\r\n            <Route path={\"/newPassword/:token\"} render={() => <NewPasswordContainer/>}/>\r\n            <Route path={\"/packs\"} render={() => <AuthRedirect><PacksContainer/></AuthRedirect>}/>\r\n            <Route path={\"/cards/:packId\"} render={() => <AuthRedirect><CardsContainer/></AuthRedirect>}/>\r\n            <Route path={\"/learn/:packId\"} render={() => <AuthRedirect><LearnContainer/></AuthRedirect>}/>\r\n            <Route exact path={\"/\"} render={() => <AuthRedirect><ProfileContainer/></AuthRedirect>}/>\r\n            <Route path={\"*\"} render={() => <PageNotFound/>}/>\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport Header from \"../Header/Header\";\r\nimport classes from \"./Main.module.css\";\r\nimport Routes from \"../Routes/Routes\";\r\n\r\nconst Main: React.FC = () => {\r\n    return (\r\n        <div className={classes.main}>\r\n            <Header/>\r\n            <Routes/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Main from './Main/Main';\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst App = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Main />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {loginReducer} from \"./reducers/login-reducer\";\r\nimport {newPasswordReducer} from \"./reducers/newPassword-reducer\";\r\nimport {profileReducer} from \"./reducers/profileP-reducer\";\r\nimport {registerReducer} from \"./reducers/register-reducer\";\r\nimport {restorePasswordReducer} from \"./reducers/restorePassword-reducer\";\r\nimport {appReducer} from \"./reducers/app-reducer\";\r\nimport {packsReducer} from \"./reducers/packs-reducer\";\r\nimport { cardsReducer } from \"./reducers/cards-reducer\";\r\nimport {configureStore} from \"@reduxjs/toolkit\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    login: loginReducer,\r\n    register: registerReducer,\r\n    restorePassword: restorePasswordReducer,\r\n    newPassword: newPasswordReducer,\r\n    profile: profileReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer,\r\n    app: appReducer,\r\n})\r\n\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: getDefaultMiddleware => getDefaultMiddleware().prepend(thunk)\r\n})\r\n\r\nexport type RootStateType = ReturnType<typeof rootReducer>\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './n1-main/m1-ui/App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./n1-main/m2-bll/store\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <React.StrictMode>\n                <App />\n            </React.StrictMode>\n        </Provider>\n    </HashRouter>,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}